
########################################################################################################################
#                                                                                                                      #
#                      Merge Mining Configuration Options (MergeMiningProxyConfig)                                     #
#                                                                                                                      #
########################################################################################################################

[merge_mining_proxy]


# Use dynamic monerod URL obtained form the official Monero website (https://monero.fail/) (default: true)
#use_dynamic_fail_data = true

# The monero fail URL to get the monerod URLs from - must be pointing to the official Monero website.
# Valid alternatives are:
# - mainnet:  'https://monero.fail/?chain=monero&network=mainnet&all=true' (default)
# - stagenet: `https://monero.fail/?chain=monero&network=stagenet&all=true`
# - testnet:  `https://monero.fail/?chain=monero&network=testnet&all=true`
#monero_fail_url = "https://monero.fail/?chain=monero&network=mainnet&all=true"

# URL to monerod (you can add your own server here or use public nodes from https://monero.fail/), only if
# 'use_dynamic_fail_data = false' or if the server at 'monero_fail_url' is not available 
# (default: The 'monerod_url = [ # mainnet ...' list below)

#monerod_url = [# stagenet
#    "http://stagenet.xmr-tw.org:38081",
#    "http://node.monerodevs.org:38089",
#    "http://node3.monerodevs.org:38089",
#    "http://xmr-lux.boldsuck.org:38081",
#    "http://singapore.node.xmr.pm:38081",
#]

#monerod_url = [ # mainnet
#    "http://node.c3pool.org:18081",
#    "http://xmr-full.p2pool.uk:18089",
#    "http://monero.stackwallet.com:18081",
#    "http://xmr.support:18081",
#    "https://xmr-01.tari.com",
#    "http://node1.xmr-tw.org:18081",
#    "http://monero-g2.hexhex.online:18081",
#    "http://137.220.120.19:18089",
#    "http://185.218.124.120:18489",
#    "http://185.218.124.120:18789",
#    "https://xmr-de-2.boldsuck.org:18081",
#    "http://46.32.46.171:18081",
#    "http://185.218.124.120:18089",
#    "http://185.218.124.120:18589",
#    "http://xmr-de-1.boldsuck.org:18081",
#    "http://185.218.124.120:18889",
#    "http://pinodexmr.hopto.org:18081",
#    "http://node.tincloud.eu:18081",
#    "http://183.6.24.33:18081",
#    "http://147.45.196.232:18089",
#    "http://h-helix.com:18089",
#    "http://185.218.124.120:18689",
#    "http://185.218.124.120:18289",
#    "https://node.tincloud.eu",
#    "https://xmr-de.boldsuck.org:18081",
#    "https://monero.booze.org",
#    "https://xmr.mailia.be:18088",
#    "https://xmr.lolfox.au",
#    "https://xmr1.doggett.tech:18089",
#    "https://node.icefiles.nz:18081",
#    "http://45.8.132.220:18089",
#    "http://82.147.85.13:18089",
#]

# Username for curl. (default = "")
#monerod_username = ""

# Password for curl. (default = "")
#monerod_password = ""

# If authentication is being used for curl. (default = false)
#monerod_use_auth = false

# The Minotari base node's GRPC address. (default = "/ip4/127.0.0.1/tcp/18142")
#base_node_grpc_address = "/ip4/127.0.0.1/tcp/18142"

# GRPC authentication for the base node (default = "none")
#base_node_grpc_authentication = { username = "miner", password = "xxxx" }

# Address of the minotari_merge_mining_proxy application. (default = "/ip4/127.0.0.1/tcp/18081")
#listener_address = "/ip4/127.0.0.1/tcp/18081"

# In sole merged mining, the block solution is usually submitted to the Monero blockchain
# (monerod) as well as to the Minotari blockchain, then this setting should be "true". With pool
# merged mining, there is no sense in submitting the solution to the Monero blockchain as the
# pool does that, then this setting should be "false". (default = true)
#submit_to_origin = true

# The merge mining proxy can either wait for the base node to achieve initial sync at startup before it enables mining,
# or not. If merge mining starts before the base node has achieved initial sync, those Minotari mined blocks will not be
# accepted. (default = true)
#wait_for_initial_sync_at_startup = true

# When mining for minotari, you might want to check the achieved difficulty of the mined minotari block before submitting
# This setting this can be disabled to allow you to always submit minotari blocks even if the difficulty does not meet the
# required.  (default = true)
#check_tari_difficulty_before_submit = true

# The maximum amount of VMs that RandomX will be use (default = 5)
#max_randomx_vms = 5

# The extra data to store in the coinbase, usually some data about the mining pool.
# Note that this data is publicly readable, but it is suggested you populate it so that
# pool dominance can be seen before any one party has more than 51%. (default = "tari_merge_mining_proxy")
#coinbase_extra = "tari_merge_mining_proxy"

# The Tari wallet address (valid address in hex) where the mining funds will be sent to - must be assigned
# e.g. "78e724f466d202abdee0f23c261289074e4a2fc9eb61e83e0179eead76ce2d3f17"
#wallet_payment_address = "YOUR_WALLET_TARI_ADDRESS"
# Range proof type - revealed_value or bullet_proof_plus: (default = "revealed_value")
#range_proof_type = "revealed_value"
