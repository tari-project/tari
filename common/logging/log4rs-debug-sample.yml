# A sample log configuration file for running in debug mode. By default, this configuration splits up log messages to
# three destinations:
#    * Console: For log messages with level WARN and higher
#    * log/network-debug.log: Debug-level logs related to the comms crate. This file will be very busy since there
#      are lots of P2P debug messages, and so this traffic is segregated from the application log messages
#    * log/base_layer-debug.log: Non-comms related Debug-level messages and higher are logged into this file
#
#  See https://docs.rs/log4rs/0.8.3/log4rs/encode/pattern/index.html for deciphering the log pattern. The log format
#  used in this sample configuration prints messages as:
#  timestamp [source file#lno] [target] LEVEL message (thread)

appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S.%f)} [{M}#{L}] [{t}] {h({l}):5} {m} (({T}:{I})){n}"

  # An appender named "network" that writes to a file with a custom pattern encoder
  network:
    kind: file
    path: "log/network-debug.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S.%f)} [{M}#{L}] [{t}] {l:5} {m} (({T}:{I})){n}"

  # An appender named "base_layer" that writes to a file with a custom pattern encoder
  base_layer:
    kind: file
    path: "log/base_layer-debug.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S.%f)} [{M}#{L}] [{t}] {l:5} {m} (({T}:{I})){n}"

# Set the default logging level to "debug" and attach the "base_layer" appender to the root
root:
  level: debug
  appenders:
    - base_layer

loggers:
  # Set the maximum console output to "warn"
  stdout:
    level: warn
    appenders:
      - stdout
    additive: false

  # Route log events sent to the "comms" logger to the "network" appender
  comms:
    level: debug
    appenders:
      - network
    additive: false