[package]
name = "tari_core"
description = "Core Tari protocol components"
authors = ["The Tari Development Community"]
repository = "https://github.com/tari-project/tari"
homepage = "https://tari.com"
readme = "README.md"
license = "BSD-3-Clause"
version = "1.0.0-pre.18"
edition = "2018"

[features]
default = ["base_node"]
transactions = []
mempool_proto = []
base_node = [
    "tari_mmr",
    "transactions",
    "mempool_proto",
    "base_node_proto",
    "monero",
    "randomx-rs",
]
base_node_proto = []
benches = ["base_node"]
ledger = [
    "minotari_ledger_wallet_comms",
]
metrics = ["tari_metrics"]

[dependencies]
minotari_ledger_wallet_comms = { path = "../../applications/minotari_ledger_wallet/comms", version = "1.0.0-pre.18", optional = true }
tari_common = { path = "../../common", version = "1.0.0-pre.18" }
tari_common_types = { path = "../../base_layer/common_types", version = "1.0.0-pre.18" }
tari_comms = { path = "../../comms/core", version = "1.0.0-pre.18" }
tari_comms_dht = { path = "../../comms/dht", version = "1.0.0-pre.18" }
tari_comms_rpc_macros = { path = "../../comms/rpc_macros", version = "1.0.0-pre.18" }
tari_crypto = { version = "0.20.3", features = ["borsh"] }
tari_metrics = { path = "../../infrastructure/metrics", optional = true, version = "1.0.0-pre.18" }
tari_mmr = { path = "../../base_layer/mmr", optional = true, version = "1.0.0-pre.18" }
tari_p2p = { path = "../../base_layer/p2p", version = "1.0.0-pre.18" }
tari_script = { path = "../../infrastructure/tari_script", version = "1.0.0-pre.18" }
tari_service_framework = { path = "../service_framework", version = "1.0.0-pre.18" }
tari_shutdown = { path = "../../infrastructure/shutdown", version = "1.0.0-pre.18" }
tari_storage = { path = "../../infrastructure/storage", version = "1.0.0-pre.18" }
tari_test_utils = { path = "../../infrastructure/test_utils", version = "1.0.0-pre.18" }
tari_utilities = { version = "0.7", features = ["borsh"] }
tari_key_manager = { path = "../key_manager", features = [
    "key_manager_service",
], version = "1.0.0-pre.18" }
tari_common_sqlite = { path = "../../common_sqlite" }
tari_hashing = { path = "../../hashing" }

async-trait = { version = "0.1.50" }
bincode = "1.1.4"
bitflags = { version = "2.4", features = ["serde"] }
blake2 = "0.10"
borsh = { version = "1.2", features = ["derive"] }
bytes = "0.5"
chacha20poly1305 = "0.10.1"
chrono = { version = "0.4.19", default-features = false, features = ["serde"] }
decimal-rs = "0.1.42"
derivative = "2.2.0"
digest = "0.10"
fs2 = "0.4.0"
futures = { version = "^0.3.16", features = ["async-await"] }
hex = "0.4.2"
integer-encoding = "3.0"
lmdb-zero = "0.4.4"
log = "0.4"
log-mdc = "0.1.0"
monero = { version = "0.21.0", features = ["serde-crate"], optional = true }
newtype-ops = "0.1.4"
num-traits = "0.2.15"
num-derive = "0.4.2"
num-format = "0.4.0"
once_cell = "1.8.0"
prost = "0.11.9"
rand = "0.8"
randomx-rs = { version = "1.3", optional = true }
serde = { version = "1.0.106", features = ["derive"] }
serde_json = "1.0"
serde_repr = "0.1.8"
sha3 = "0.10"
sha2 = "0.10"
strum = "0.22"
strum_macros = "0.22"
thiserror = "1.0.26"
tokio = { version = "1.36", features = ["time", "sync", "macros"] }
tracing = "0.1.26"
zeroize = "1"
primitive-types = { version = "0.12", features = ["serde"] }
tiny-keccak = { package = "tari-tiny-keccak", version = "2.0.2", features = [
    "keccak",
] }
dirs-next = "1.0.2"

[dev-dependencies]
criterion = { version = "0.4.0" }
tari_p2p = { path = "../../base_layer/p2p", features = ["test-mocks"] }
tari_test_utils = { path = "../../infrastructure/test_utils" }
# SQLite required for the integration tests
libsqlite3-sys = { version = "0.25.1", features = ["bundled"] }
config = { version = "0.14.0" }
env_logger = "0.7.0"
tempfile = "3.1.0"
toml = { version = "0.5" }
quickcheck = "1.0"

[build-dependencies]
tari_common = { path = "../../common", features = ["build"], version = "1.0.0-pre.18" }
tari_features = { path = "../../common/tari_features", version = "1.0.0-pre.18" }

[[bench]]
name = "mempool"
harness = false

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tari_target_network_mainnet)', 'cfg(tari_target_network_nextnet)', 'cfg(tari_target_network_testnet)'] }
