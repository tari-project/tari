// Copyright 2019, The Tari Project
//
// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the
// following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following
// disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
// following disclaimer in the documentation and/or other materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote
// products derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
// USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

use std::{env, path::PathBuf};

use cbindgen::{Config, Language, LineEndingStyle, ParseConfig, Style};
use tari_common::build::StaticApplicationInfo;
use tari_features::resolver::build_features;

fn main() {
    build_features();
    let crate_dir = env::var("CARGO_MANIFEST_DIR").unwrap();

    // generate version info
    let gen = StaticApplicationInfo::initialize().unwrap();
    gen.write_consts_to_outdir("consts.rs").unwrap();

    let output_file = PathBuf::from(&crate_dir).join("tari_mining_helper.h").display().to_string();

    let config = Config {
        language: Language::C,
        header: Some("// Copyright 2024. The Tari Project\n// SPDX-License-Identifier: BSD-3-Clause".to_string()),
        parse: ParseConfig {
            parse_deps: true,
            include: Some(vec![
                "tari_comms".to_string(),
            ]),
            ..Default::default()
        },
        autogen_warning: Some("// This file was generated by cargo-bindgen. Please do not edit manually.".to_string()),
        style: Style::Tag,
        cpp_compat: true,
        line_endings: LineEndingStyle::Native,
        ..Default::default()
    };

    cbindgen::generate_with_config(&crate_dir, config)
        .unwrap()
        .write_to_file(output_file);
}
