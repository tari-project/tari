[build.env]
passthrough = [
  "CFLAGS",
  "TARGET",
  "RUST_TARGET",
  "BUILD_TARGET",
  "CARGO_BUILD_TARGET",
  "TARGET_CFLAGS",
  "RUSTFLAGS",
  "RUST_BACKTRACE",
  "RUST_DEBUG",
  "RUST_LOG",
  "ARCH",
  "FEATURES",
  "ROARING_ARCH",
  "TARI_NETWORK",
  "TARI_TARGET_NETWORK",
  "TARI_NETWORK_DIR",
]

# Don't forget export:
#  CFLAGS=-DMDB_USE_ROBUST=0
[target.x86_64-linux-android]
image = "ghcr.io/cross-rs/x86_64-linux-android:edge"
pre-build = [ """
export DEBIAN_FRONTEND=noninteractive && \
apt-get update && \
apt-get --assume-yes --no-install-recommends install \
 curl unzip && \
curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v25.2/protoc-25.2-linux-x86_64.zip && \
unzip -o protoc-25.2-linux-x86_64.zip -d /usr/ && \
/usr/bin/protoc --version
""" ]

[target.aarch64-linux-android]
image = "ghcr.io/cross-rs/aarch64-linux-android:edge"
pre-build = [ """
export DEBIAN_FRONTEND=noninteractive && \
apt-get update && \
apt-get --assume-yes --no-install-recommends install \
 curl unzip && \
curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v25.2/protoc-25.2-linux-x86_64.zip && \
unzip -o protoc-25.2-linux-x86_64.zip -d /usr/ && \
/usr/bin/protoc --version
""" ]

[target.aarch64-unknown-linux-gnu]
image = "ubuntu:18.04"
# Mergered all scripts/install_ubuntu_dependencies*.sh scripts
pre-build = [ """
apt-get update && \
apt-get -y install \
  openssl \
  libssl-dev \
  pkg-config \
  libsqlite3-dev \
  clang-10 \
  git \
  cmake \
  dh-autoreconf \
  libc++-dev \
  libc++abi-dev \
  libprotobuf-dev \
  protobuf-compiler \
  libncurses5-dev \
  libncursesw5-dev \
  zip \
  curl \
  pkg-config-aarch64-linux-gnu \
  gcc-aarch64-linux-gnu \
  g++-aarch64-linux-gnu && \
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
export PATH="$HOME/.cargo/bin:$PATH" && \
rustup target add aarch64-unknown-linux-gnu && \
rustup toolchain install stable-aarch64-unknown-linux-gnu
""" ]

[target.aarch64-unknown-linux-gnu.env]
passthrough = [
  "CARGO_BUILD_TARGET",
  "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc",
  "BINDGEN_EXTRA_CLANG_ARGS=--sysroot /usr/aarch64-linux-gnu/include/",
]
