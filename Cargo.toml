[workspace.package]
version = "1.7.0-pre.3"
edition = "2021"
authors = ["The Tari Development Community"]

[workspace]
resolver = "2"

members = [
    "base_layer/chat_ffi",
    "base_layer/core",
    "base_layer/common_types",
    "base_layer/contacts",
    "base_layer/key_manager",
    "base_layer/mmr",
    "base_layer/p2p",
    "base_layer/service_framework",
    "base_layer/wallet",
    "base_layer/wallet_ffi",
    "base_layer/tari_mining_helper_ffi",
    "clients/rust/base_node_grpc_client",
    "clients/rust/wallet_grpc_client",
    "comms/core",
    "comms/dht",
    "comms/rpc_macros",
    "common_sqlite",
    "infrastructure/libtor",
    "infrastructure/metrics",
    "infrastructure/shutdown",
    "infrastructure/storage",
    "infrastructure/tari_script",
    "infrastructure/test_utils",
    "buildtools/deps_only",
    "applications/minotari_node",
    "applications/minotari_console_wallet",
    "applications/minotari_app_utilities",
    "applications/minotari_merge_mining_proxy",
    "applications/minotari_miner",
    "applications/minotari_ledger_wallet/comms",
    "applications/minotari_ledger_wallet/common",
    "integration_tests",
    "hashing"
]

[workspace.dependencies]
tari_comms = { path = "comms/core" }
tari_comms_dht = { path = "comms/dht", default-features = false }
tari_common = { path = "common" }
tari_features = { path = "common/tari_features" }
tari_common_types = { path = "base_layer/common_types" }
tari_core = { path = "base_layer/core", default-features = false }
tari_crypto = { version = "0.21.0" }
tari_script = { path = "infrastructure/tari_script" }
tari_utilities = { version = "0.8" }
minotari_app_grpc = { path = "applications/minotari_app_grpc" }
minotari_app_utilities = { path = "applications/minotari_app_utilities" }
tari_contacts = { path = "base_layer/contacts" }
tari_key_manager = { path = "base_layer/key_manager" }
tari_libtor = { path = "infrastructure/libtor" }
tari_p2p = { path = "base_layer/p2p" }
tari_shutdown = { path = "infrastructure/shutdown" }
minotari_wallet = { path = "base_layer/wallet" }
tari_hashing = { path = "hashing" }
tari_common_sqlite = { path = "common_sqlite" }
tari_service_framework = { path = "base_layer/service_framework" }
tari_test_utils = { path = "infrastructure/test_utils" }
tari_storage = { path = "infrastructure/storage" }
minotari_node_grpc_client = { path = "clients/rust/base_node_grpc_client" }
tari_comms_rpc_macros = { path = "comms/rpc_macros" }
tari_metrics = { path = "infrastructure/metrics" }
tari_mmr = { path = "base_layer/mmr" }
minotari_chat_ffi = { path = "base_layer/chat_ffi" }
minotari_console_wallet = { path = "applications/minotari_console_wallet" }
minotari_merge_mining_proxy = { path = "applications/minotari_merge_mining_proxy" }
minotari_miner = { path = "applications/minotari_miner" }
tari_chat_client = { path = "base_layer/contacts/src/chat_client" }
minotari_node = { path = "applications/minotari_node" }
minotari_wallet_ffi = { path = "base_layer/wallet_ffi" }
minotari_wallet_grpc_client = { path = "clients/rust/wallet_grpc_client" }
minotari_ledger_wallet_comms = { path = "applications/minotari_ledger_wallet/comms" }

[profile.release]
# By default, Rust will wrap an integer in release mode instead of throwing the overflow error
# seen in debug mode. Panicking at this time is better than silently using the wrong value.
overflow-checks = true

[patch.crates-io]
liblmdb-sys = { git = "https://github.com/tari-project/lmdb-rs", tag = "0.7.6-tari.1" }
