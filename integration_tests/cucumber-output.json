<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite id="0" name="Feature: BlockTemplate: ?\C:\projects\tari\integration_tests\tests\features\BlockTemplate.feature" package="testsuite/Feature: BlockTemplate: ?\C:\projects\tari\integration_tests\tests\features\BlockTemplate.feature" tests="1" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:15:10.0615255Z" time="1.7337428"><testcase name="Scenario: Verify UTXO and kernel MMR size in header: ?\C:\projects\tari\integration_tests\tests\features\BlockTemplate.feature:8:1" time="1.7337428"><system-out><![CDATA[  Scenario: Verify UTXO and kernel MMR size in header
   ✔  Given I have a seed node SEED_A
   ✔  When I have 1 base nodes connected to all seed nodes
   ✔  Then meddling with block template data from node SEED_A is not allowed
]]></system-out></testcase></testsuite><testsuite id="1" name="Feature: Chat FFI messaging: ?\C:\projects\tari\integration_tests\tests\features\ChatFFI.feature" package="testsuite/Feature: Chat FFI messaging: ?\C:\projects\tari\integration_tests\tests\features\ChatFFI.feature" tests="2" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:15:10.0615257Z" time="4.681987"><testcase name="Scenario: A message is propagated between clients via 3rd party: ?\C:\projects\tari\integration_tests\tests\features\ChatFFI.feature:7:3" time="1.5811876"><system-out><![CDATA[  Scenario: A message is propagated between clients via 3rd party
   ✔  Given I have a seed node SEED_A
   ✔  When I have a chat FFI client CHAT_A connected to seed node SEED_A
   ✔  When I have a chat FFI client CHAT_B connected to seed node SEED_A
   ✔  When I use CHAT_A to send a message 'Hey there' to CHAT_B
   ✔  Then CHAT_B will have 1 message with CHAT_A
]]></system-out></testcase><testcase name="Scenario: A message is sent directly between two FFI clients: ?\C:\projects\tari\integration_tests\tests\features\ChatFFI.feature:14:3" time="3.1007994"><system-out><![CDATA[  Scenario: A message is sent directly between two FFI clients
   ✔  Given I have a seed node SEED_A
   ✔  When I have a chat FFI client CHAT_A connected to seed node SEED_A
   ✔  When I have a chat FFI client CHAT_B connected to seed node SEED_A
   ✔  When CHAT_A adds CHAT_B as a contact
   ✔  When CHAT_B adds CHAT_A as a contact
   ✔  When CHAT_A waits for contact CHAT_B to be online
   ✔  When I use CHAT_A to send a message 'Hey there' to CHAT_B
   ✔  Then CHAT_B will have 1 message with CHAT_A
]]></system-out></testcase></testsuite><testsuite id="2" name="Feature: Mempool: ?\C:\projects\tari\integration_tests\tests\features\Mempool.feature" package="testsuite/Feature: Mempool: ?\C:\projects\tari\integration_tests\tests\features\Mempool.feature" tests="3" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:15:10.0615259Z" time="50.1573437"><testcase name="Scenario: Transactions are propagated through a network: ?\C:\projects\tari\integration_tests\tests\features\Mempool.feature:8:3" time="20.596589"><system-out><![CDATA[  Scenario: Transactions are propagated through a network
   ✔  Given I have 8 seed nodes
   ✔  When I have a base node SENDER connected to all seed nodes
   ✔  When I have 8 base nodes connected to all seed nodes
   ✔  When I mine a block on SENDER with coinbase CB1
   ✔  When I mine 2 blocks on SENDER
   ✔  Then all nodes are at height 3
   ✔  When I create a transaction TX1 spending CB1 to UTX1
   ✔  When I submit transaction TX1 to SENDER
   ✔  Then SENDER has TX1 in MEMPOOL state
   ✔  Then TX1 is in the MEMPOOL of all nodes, where 1% can fail
]]></system-out></testcase><testcase name="Scenario: Clear out mempool: ?\C:\projects\tari\integration_tests\tests\features\Mempool.feature:44:3" time="18.0481043"><system-out><![CDATA[  Scenario: Clear out mempool
   ✔  Given I have 1 seed nodes
   ✔  When I have a base node SENDER connected to all seed nodes
   ✔  When I mine a block on SENDER with coinbase CB1
   ✔  When I mine a block on SENDER with coinbase CB2
   ✔  When I mine a block on SENDER with coinbase CB3
   ✔  When I mine 4 blocks on SENDER
   ✔  When I create a custom fee transaction TX1 spending CB1 to UTX1 with fee 1600
   ✔  When I create a custom fee transaction TX2 spending CB2 to UTX2 with fee 2000
   ✔  When I create a custom fee transaction TX3 spending CB3 to UTX3 with fee 1800
   ✔  When I submit transaction TX1 to SENDER
   ✔  When I submit transaction TX2 to SENDER
   ✔  When I submit transaction TX3 to SENDER
   ✔  Then SENDER has TX1 in MEMPOOL state
   ✔  Then SENDER has TX2 in MEMPOOL state
   ✔  Then SENDER has TX3 in MEMPOOL state
   ✔  When I mine 1 custom weight blocks on SENDER with weight 80
   ✔  Then SENDER has TX1 in MEMPOOL state
   ✔  Then SENDER has TX2 in MINED state
   ✔  Then SENDER has TX3 in MEMPOOL state
   ✔  When I mine 1 custom weight blocks on SENDER with weight 80
   ✔  Then SENDER has TX1 in MEMPOOL state
   ✔  Then SENDER has TX2 in MINED state
   ✔  Then SENDER has TX3 in MINED state
]]></system-out></testcase><testcase name="Scenario: Zero-conf transactions: ?\C:\projects\tari\integration_tests\tests\features\Mempool.feature:122:3" time="11.5126504"><system-out><![CDATA[  Scenario: Zero-conf transactions
   ✔  Given I have 1 seed nodes
   ✔  When I have a base node SENDER connected to all seed nodes
   ✔  When I mine a block on SENDER with coinbase CB1
   ✔  When I mine a block on SENDER with coinbase CB2
   ✔  When I mine 4 blocks on SENDER
   ✔  When I create a custom fee transaction TX01 spending CB1 to UTX01 with fee 20
   ✔  When I create a custom fee transaction TX02 spending UTX01 to UTX02 with fee 20
   ✔  When I create a custom fee transaction TX03 spending UTX02 to UTX03 with fee 20
   ✔  When I create a custom fee transaction TX11 spending CB2 to UTX11 with fee 20
   ✔  When I create a custom fee transaction TX12 spending UTX11 to UTX12 with fee 20
   ✔  When I create a custom fee transaction TX13 spending UTX12 to UTX13 with fee 20
   ✔  When I submit transaction TX01 to SENDER
   ✔  When I submit transaction TX02 to SENDER
   ✔  When I submit transaction TX03 to SENDER
   ✔  When I submit transaction TX11 to SENDER
   ✔  When I submit transaction TX12 to SENDER
   ✔  When I submit transaction TX13 to SENDER
   ✔  Then SENDER has TX01 in MEMPOOL state
   ✔  Then SENDER has TX02 in MEMPOOL state
   ✔  Then SENDER has TX03 in MEMPOOL state
   ✔  Then SENDER has TX11 in MEMPOOL state
   ✔  Then SENDER has TX12 in MEMPOOL state
   ✔  Then SENDER has TX13 in MEMPOOL state
   ✔  When I mine 1 blocks on SENDER
   ✔  Then SENDER has TX01 in MINED state
   ✔  Then SENDER has TX02 in MINED state
   ✔  Then SENDER has TX03 in MINED state
   ✔  Then SENDER has TX11 in MINED state
   ✔  Then SENDER has TX12 in MINED state
   ✔  Then SENDER has TX13 in MINED state
]]></system-out></testcase></testsuite><testsuite id="3" name="Feature: Merge Mining: ?\C:\projects\tari\integration_tests\tests\features\MergeMining.feature" package="testsuite/Feature: Merge Mining: ?\C:\projects\tari\integration_tests\tests\features\MergeMining.feature" tests="1" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:15:11.7956354Z" time="12.5043981"><testcase name="Scenario: Simple Merge Mining: ?\C:\projects\tari\integration_tests\tests\features\MergeMining.feature:36:3" time="12.5043981"><system-out><![CDATA[  Scenario: Simple Merge Mining
   ✔  Given I have a seed node NODE
   ✔  When I have wallet WALLET connected to all seed nodes
   ✔  And I have a merge mining proxy PROXY connected to NODE and WALLET with default config
   ✔  When I merge mine 2 blocks via PROXY
   ✔  Then all nodes are at height 2
]]></system-out></testcase></testsuite><testsuite id="4" name="Feature: Block Propagation: ?\C:\projects\tari\integration_tests\tests\features\Propagation.feature" package="testsuite/Feature: Block Propagation: ?\C:\projects\tari\integration_tests\tests\features\Propagation.feature" tests="2" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:15:13.1677071Z" time="39.8641733"><testcase name="Scenario: Simple propagation: ?\C:\projects\tari\integration_tests\tests\features\Propagation.feature:26:3" time="17.2422693"><system-out><![CDATA[  Scenario: Simple propagation
   ✔  Given I have 2 seed nodes
   ✔  When I have 4 base nodes connected to all seed nodes
   ✔  When I have a SHA3 miner MINER connected to all seed nodes
   ✔  When mining node MINER mines 5 blocks
   ✔  Then node MINER is at height 5
   ✔  Then all nodes are at height 5
]]></system-out></testcase><testcase name="Scenario: Pruned node should prune outputs: ?\C:\projects\tari\integration_tests\tests\features\Propagation.feature:95:3" time="22.621904"><system-out><![CDATA[  Scenario: Pruned node should prune outputs
   ✔  Given I have 1 seed nodes
   ✔  When I have a base node SENDER connected to all seed nodes
   ✔  When I have a pruned node PNODE1 connected to node SENDER with pruning horizon set to 5
   ✔  When I mine a block on SENDER with coinbase CB1
   ✔  When I mine 2 blocks on SENDER
   ✔  When I create a transaction TX1 spending CB1 to UTX1
   ✔  When I submit transaction TX1 to SENDER
   ✔  When I mine 1 blocks on SENDER
   ✔  Then TX1 is in the MINED of all nodes
   ✔  When I mine 17 blocks on SENDER
   ✔  Then all nodes are on the same chain at height 21
   ✔  Then node PNODE1 has a pruned height of 16
]]></system-out></testcase></testsuite><testsuite id="5" name="Feature: Reorgs: ?\C:\projects\tari\integration_tests\tests\features\Reorgs.feature" package="testsuite/Feature: Reorgs: ?\C:\projects\tari\integration_tests\tests\features\Reorgs.feature" tests="3" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:15:24.3000596Z" time="91.2420627"><testcase name="Scenario: Simple reorg to stronger chain: ?\C:\projects\tari\integration_tests\tests\features\Reorgs.feature:8:3" time="30.5817411"><system-out><![CDATA[  Scenario: Simple reorg to stronger chain
   ✔  Given I have a seed node SEED_B
   ✔  When I have a base node B connected to seed SEED_B
   ✔  When I have wallet WB connected to base node B
   ✔  When I have mining node BM connected to base node B and wallet WB
   ✔  When mining node BM mines 3 blocks with min difficulty 1 and max difficulty 50
   ✔  Given I have a seed node SEED_C
   ✔  When I have a base node C connected to seed SEED_C
   ✔  When I have wallet WC connected to base node C
   ✔  When I have mining node CM connected to base node C and wallet WC
   ✔  When mining node CM mines 10 blocks with min difficulty 51 and max difficulty 9999999999
   ✔  Then node B is at height 3
   ✔  Then node C is at height 10
   ✔  When I have a base node SA connected to nodes B,C
   ✔  Then node SA is at height 10
   ✔  Then node B is at height 10
   ✔  Then node C is at height 10
]]></system-out></testcase><testcase name="Scenario: Simple reorg with burned output: ?\C:\projects\tari\integration_tests\tests\features\Reorgs.feature:33:3" time="60.6603216"><system-out><![CDATA[  Scenario: Simple reorg with burned output
   ✔  Given I have a seed node SEED_B
   ✔  When I have a base node B connected to seed SEED_B
   ✔  When I have wallet WB connected to base node B
   ✔  When I have mining node BM connected to base node B and wallet WB
   ✔  When mining node BM mines 10 blocks with min difficulty 1 and max difficulty 1
   ✔  When I wait for wallet WB to have at least 55000000000 uT
   ✔  When I create a burn transaction of 1000000 uT from WB at fee 100
   ✔  When mining node BM mines 5 blocks with min difficulty 1 and max difficulty 1
   ✔  Given I have a seed node SEED_C
   ✔  When I have a base node C connected to seed SEED_C
   ✔  When I have wallet WC connected to base node C
   ✔  When I have mining node CM connected to base node C and wallet WC
   ✔  When mining node CM mines 17 blocks with min difficulty 1 and max difficulty 1
   ✔  Then node B is at height 15
   ✔  Then node C is at height 17
   ✔  When I have a base node SA connected to nodes B,C
   ✔  Then node SA is at height 17
   ✔  Then node B is at height 17
   ✔  Then node C is at height 17
]]></system-out></testcase><testcase name="Scenario: Node rolls back reorg on invalid block: ?\C:\projects\tari\integration_tests\tests\features\Reorgs.feature:63:3" time="0"><skipped/></testcase></testsuite><testsuite id="6" name="Feature: Block Sync: ?\C:\projects\tari\integration_tests\tests\features\Sync.feature" package="testsuite/Feature: Block Sync: ?\C:\projects\tari\integration_tests\tests\features\Sync.feature" tests="6" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:15:30.6639672Z" time="190.8327484"><testcase name="Scenario: Simple block sync: ?\C:\projects\tari\integration_tests\tests\features\Sync.feature:26:3" time="15.602751"><system-out><![CDATA[  Scenario: Simple block sync
   ✔  Given I have 1 seed nodes
   ✔  When I have a SHA3 miner MINER connected to all seed nodes
   ✔  When mining node MINER mines 20 blocks
   ✔  When I have 2 base nodes connected to all seed nodes
   ✔  Then all nodes are at height 20
]]></system-out></testcase><testcase name="Scenario: Sync burned output: ?\C:\projects\tari\integration_tests\tests\features\Sync.feature:34:3" time="30.2412368"><system-out><![CDATA[  Scenario: Sync burned output
   ✔  Given I have a seed node NODE
   ✔  When I have a base node NODE1 connected to all seed nodes
   ✔  When I have 2 base nodes connected to all seed nodes
   ✔  When I have wallet WALLET_A connected to all seed nodes
   ✔  When I have mining node MINER connected to base node NODE and wallet WALLET_A
   ✔  When mining node MINER mines 15 blocks
   ✔  Then all nodes are at height 15
   ✔  When I wait for wallet WALLET_A to have at least 55000000000 uT
   ✔  When I create a burn transaction of 1000000 uT from WALLET_A at fee 100
   ✔  When mining node MINER mines 10 blocks
   ✔  Then all nodes are at height 25
   ✔  When I have a base node NODE2 connected to all seed nodes
   ✔  Then all nodes are at height 25
]]></system-out></testcase><testcase name="Scenario: Pruned mode simple sync: ?\C:\projects\tari\integration_tests\tests\features\Sync.feature:50:3" time="45.9529445"><system-out><![CDATA[  Scenario: Pruned mode simple sync
   ✔  Given I have 1 seed nodes
   ✔  When I have a SHA3 miner NODE1 connected to all seed nodes
   ✔  When I mine a block on NODE1 with coinbase CB1
   ✔  When I mine 4 blocks on NODE1
   ✔  When I spend outputs CB1 via NODE1
   ✔  When mining node NODE1 mines 15 blocks
   ✔  When I have a pruned node PNODE1 connected to node NODE1 with pruning horizon set to 5
   ✔  Then all nodes are at height 20
]]></system-out></testcase><testcase name="Scenario: Pruned node should handle burned output: ?\C:\projects\tari\integration_tests\tests\features\Sync.feature:61:3" time="61.1897761"><system-out><![CDATA[  Scenario: Pruned node should handle burned output
   ✔  Given I have a seed node NODE
   ✔  When I have a base node NODE1 connected to all seed nodes
   ✔  When I have 2 base nodes connected to all seed nodes
   ✔  When I have wallet WALLET_A connected to all seed nodes
   ✔  When I have mining node MINER connected to base node NODE and wallet WALLET_A
   ✔  When mining node MINER mines 15 blocks
   ✔  Then all nodes are at height 15
   ✔  When I wait for wallet WALLET_A to have at least 55000000000 uT
   ✔  When I create a burn transaction of 1000000 uT from WALLET_A at fee 100
   ✔  When mining node MINER mines 10 blocks
   ✔  Then all nodes are at height 25
   ✔  When I have a pruned node PNODE1 connected to node NODE1 with pruning horizon set to 5
   ✔  Then all nodes are at height 25
]]></system-out></testcase><testcase name="Scenario: When a new node joins the network, it receives all peers: ?\C:\projects\tari\integration_tests\tests\features\Sync.feature:77:3" time="3.3694665"><system-out><![CDATA[  Scenario: When a new node joins the network, it receives all peers
   ✔  Given I have 10 seed nodes
   ✔  When I have a base node NODE1 connected to all seed nodes
   ✔  When I wait for NODE1 to have 10 connections
   ✔  When I have a base node NODE2 connected to node NODE1
   ✔  Then NODE1 has at least 11 peers
   ✔  Then NODE2 has at least 11 peers
]]></system-out></testcase><testcase name="Scenario: Syncing node while also mining before tip sync: ?\C:\projects\tari\integration_tests\tests\features\Sync.feature:143:5" time="34.4765735"><system-out><![CDATA[  Scenario Outline: Syncing node while also mining before tip sync
   ✔  Given I have a seed node SEED
   ✔  When I have wallet WALLET1 connected to seed node SEED
   ✔  When I have wallet WALLET2 connected to seed node SEED
   ✔  When I have mining node MINER connected to base node SEED and wallet WALLET1
   ✔  When I have a base node SYNCER connected to all seed nodes
   ✔  When I have mine-before-tip mining node MINER2 connected to base node SYNCER and wallet WALLET2
   ✔  When I stop node SYNCER
   ✔  When mining node MINER mines 101 blocks with min difficulty 1 and max difficulty 9999999999
   ✔  Then node SEED is at height 101
   ✔  When I start base node SYNCER
   ✔  When mining node MINER2 mines 10 blocks with min difficulty 1 and max difficulty 2
   ✔  Then node SYNCER is at the same height as node SEED
]]></system-out></testcase></testsuite><testsuite id="7" name="Feature: Wallet CLI: ?\C:\projects\tari\integration_tests\tests\features\WalletCli.feature" package="testsuite/Feature: Wallet CLI: ?\C:\projects\tari\integration_tests\tests\features\WalletCli.feature" tests="1" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:16:06.8694917Z" time="45.2509183"><testcase name="Scenario: As a user I want to burn tari via command line: ?\C:\projects\tari\integration_tests\tests\features\WalletCli.feature:47:5" time="45.2509183"><system-out><![CDATA[  Scenario: As a user I want to burn tari via command line
   ✔  Given I have a seed node SEED
   ✔  When I have a base node BASE connected to seed SEED
   ✔  When I have wallet WALLET connected to base node BASE
   ✔  When I have mining node MINER connected to base node BASE and wallet WALLET
   ✔  When mining node MINER mines 12 blocks
   ✔  When I mine 3 blocks on BASE
   ✔  Then all nodes are at height 15
   ✔  When I wait for wallet WALLET to have at least 221552530060 uT
   ✔  When I create a burn transaction of 201552500000 uT from WALLET via command line
   ✔  When I mine 5 blocks on BASE
   ✔  Then all nodes are at height 20
   ✔  Then I get balance of wallet WALLET is at least 20000000000 uT via command line
]]></system-out></testcase></testsuite><testsuite id="8" name="Feature: Wallet FFI: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature" package="testsuite/Feature: Wallet FFI: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature" tests="6" errors="0" failures="3" hostname="localhost" timestamp="2023-05-11T11:16:28.7758096Z" time="860.237319"><testcase name="Scenario: As a client I want to retrieve the mnemonic word list for a given language: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature:24:5" time="0.0071234"><system-out><![CDATA[  Scenario: As a client I want to retrieve the mnemonic word list for a given language
   ✔  Then I retrieve the mnemonic word list for CHINESE_SIMPLIFIED
   ✔  Then I retrieve the mnemonic word list for ENGLISH
   ✔  Then I retrieve the mnemonic word list for FRENCH
   ✔  Then I retrieve the mnemonic word list for ITALIAN
   ✔  Then I retrieve the mnemonic word list for JAPANESE
   ✔  Then I retrieve the mnemonic word list for KOREAN
   ✔  Then I retrieve the mnemonic word list for SPANISH
]]></system-out></testcase><testcase name="Scenario: As a client I want to receive contact liveness events: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature:72:5" time="141.8666836"><failure type="Step Panicked" message="Step panicked. Captured output: FFI_WALLET doesn&apos;t have at least 2 contacts with status Online!"><![CDATA[  Scenario: As a client I want to receive contact liveness events
   ✔  Given I have a seed node SEED
   ✔  And I have non-default wallet WALLET1 connected to all seed nodes using DirectOnly
   ✔  And I have non-default wallet WALLET2 connected to all seed nodes using DirectOnly
   ✔  And I have a ffi wallet FFI_WALLET connected to seed node SEED
   ✔  When I add contact with alias ALIAS1 and address of WALLET1 to ffi wallet FFI_WALLET
   ✔  And I add contact with alias ALIAS2 and address of WALLET2 to ffi wallet FFI_WALLET
   ✔  And I have mining node MINER1 connected to base node SEED and wallet WALLET1
   ✔  And I have mining node MINER2 connected to base node SEED and wallet WALLET2
   ✔  And mining node MINER1 mines 1 blocks
   ✔  And mining node MINER2 mines 5 blocks
   ✔  Then I wait for wallet WALLET1 to have at least 100000000 uT
   ✔  And I wait for wallet WALLET2 to have at least 100000000 uT
   ✔  When I send 100000000 uT without waiting for broadcast from wallet WALLET1 to wallet FFI_WALLET at fee 20
   ✔  And I send 100000000 uT without waiting for broadcast from wallet WALLET2 to wallet FFI_WALLET at fee 20
   ✘  Then I wait for ffi wallet FFI_WALLET to have at least 2 contacts to be Online
      Step failed:
      Defined: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature:91:9
      Matched: integration_tests\tests\steps\wallet_ffi_steps.rs:250:1
      Step panicked. Captured output: FFI_WALLET doesn't have at least 2 contacts with status Online!
      Client {
          base_nodes: {},
          blocks: {},
          miners: {},
          ffi_wallets: {},
          wallets: {},
          merge_mining_proxies: {},
          transactions: {},
          wallet_addresses: {},
          utxos: {},
          output_hash: None,
          pre_image: None,
          wallet_connected_to_base_node: {
              "WALLET1": "SEED",
              "WALLET2": "SEED",
          },
          seed_nodes: [],
          wallet_tx_ids: {
              "f005a092c438c3a3cf9270d5bb134d866561b809a093fe331965a255e351227d2e": [
                  9610612459298902498,
              ],
              "7688a81e63886c1eda9a1a19109c1884efcf401bac1ff83f38d2bde2e69cb6718d": [
                  9610612459298902498,
                  8796089081661507410,
              ],
              "e0c6eefee85a8be6a4e95846058b74b9bf0c3db1f36f3c164223913c24988568fc": [
                  8796089081661507410,
              ],
          },
          errors: [],
          last_imported_tx_ids: [],
          last_merge_miner_response: Null,
      }
]]></failure></testcase><testcase name="Scenario: As a client I want to retrieve a list of transactions I have made and received: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature:95:5" time="57.4440342"><system-out><![CDATA[  Scenario: As a client I want to retrieve a list of transactions I have made and received
   ✔  Given I have a seed node SEED
   ✔  When I have a base node BASE1 connected to all seed nodes
   ✔  When I have a base node BASE2 connected to all seed nodes
   ✔  When I have wallet SENDER connected to base node BASE1
   ✔  And I have a ffi wallet FFI_WALLET connected to base node BASE2
   ✔  When I have wallet RECEIVER connected to base node BASE2
   ✔  When I have mining node MINER connected to base node BASE1 and wallet SENDER
   ✔  When mining node MINER mines 10 blocks
   ✔  Then I wait for wallet SENDER to have at least 2000000 uT
   ✔  And I send 2000000 uT from wallet SENDER to wallet FFI_WALLET at fee 20
   ✔  Then ffi wallet FFI_WALLET detects AT_LEAST 1 ffi transactions to be TRANSACTION_STATUS_BROADCAST
   ✔  When mining node MINER mines 10 blocks
   ✔  Then I wait for ffi wallet FFI_WALLET to have at least 1000000 uT
   ✔  And I send 1000000 uT from ffi wallet FFI_WALLET to wallet RECEIVER at fee 20
   ✔  Then ffi wallet FFI_WALLET detects AT_LEAST 2 ffi transactions to be TRANSACTION_STATUS_BROADCAST
   ✔  Then I wait until base node BASE2 has 1 unconfirmed transactions in its mempool
   ✔  When mining node MINER mines 4 blocks
   ✔  Then all nodes are at height 24
   ✔  Then I wait for wallet RECEIVER to have at least 1000000 uT
   ✔  And I have 1 received and 1 send transaction in ffi wallet FFI_WALLET
   ✔  And I start TXO validation on ffi wallet FFI_WALLET
   ✔  And I start TX validation on ffi wallet FFI_WALLET
   ✔  Then I wait for ffi wallet FFI_WALLET to receive 2 mined
   ✔  Then I want to view the transaction kernels for completed transactions in ffi wallet FFI_WALLET
   ✔  And I stop ffi wallet FFI_WALLET
]]></system-out></testcase><testcase name="Scenario: As a client I want to receive Tari via my Public Key sent while I am offline when I come back online: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature:126:5" time="80.3632667"><failure type="Step Panicked" message="Step panicked. Captured output: Wallet doesn&apos;t have enough available funds 0"><![CDATA[  Scenario: As a client I want to receive Tari via my Public Key sent while I am offline when I come back online
   ✔  Given I have a seed node SEED
   ✔  When I have a base node BASE1 connected to all seed nodes
   ✔  When I have a base node BASE2 connected to all seed nodes
   ✔  When I have wallet SENDER connected to base node BASE1
   ✔  And I have a ffi wallet FFI_WALLET connected to base node BASE1
   ✔  When I have mining node MINER connected to base node BASE1 and wallet SENDER
   ✔  When mining node MINER mines 10 blocks
   ✔  Then I wait for wallet SENDER to have at least 1000000 uT
   ✔  And I stop ffi wallet FFI_WALLET
   ✔  And I send 1000000 uT without waiting for broadcast from wallet SENDER to wallet FFI_WALLET at fee 20
   ✔  And I restart ffi wallet FFI_WALLET connected to base node BASE2
   ✔  Then I wait for ffi wallet FFI_WALLET to receive 1 transaction
   ✔  Then I wait for ffi wallet FFI_WALLET to receive 1 finalization
   ✔  Then I wait for ffi wallet FFI_WALLET to receive 1 broadcast
   ✔  When mining node MINER mines 10 blocks
   ✔  Then I wait for ffi wallet FFI_WALLET to receive 1 mined
   ✘  Then I wait for ffi wallet FFI_WALLET to have at least 1000000 uT
      Step failed:
      Defined: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature:144:9
      Matched: integration_tests\tests\steps\wallet_ffi_steps.rs:120:1
      Step panicked. Captured output: Wallet doesn't have enough available funds 0
      Client {
          base_nodes: {},
          blocks: {},
          miners: {},
          ffi_wallets: {},
          wallets: {},
          merge_mining_proxies: {},
          transactions: {},
          wallet_addresses: {
              "FFI_WALLET": "148c6c3708862a96ad78b16c1657444566ef87a0c5ba806ade7768dfa3d51b7b37",
          },
          utxos: {},
          output_hash: None,
          pre_image: None,
          wallet_connected_to_base_node: {
              "SENDER": "BASE1",
          },
          seed_nodes: [],
          wallet_tx_ids: {
              "50fec1ba253c122140440a8fb3c085c4bed79fbc3d4ac14e86b8ceea2627a025e5": [
                  17505091350136725362,
              ],
              "148c6c3708862a96ad78b16c1657444566ef87a0c5ba806ade7768dfa3d51b7b37": [
                  17505091350136725362,
              ],
          },
          errors: [],
          last_imported_tx_ids: [],
          last_merge_miner_response: Null,
      }
]]></failure></testcase><testcase name="Scenario: As a client I want to send a one-sided transaction: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature:148:5" time="516.7488314"><failure type="Step Panicked" message="Step panicked. Captured output: Transaction from SENDER to FFI_WALLET with amount 2400000 at fee 5 failed to be broadcasted"><![CDATA[  Scenario: As a client I want to send a one-sided transaction
   ✔  Given I have a seed node SEED
   ✔  When I have a base node BASE1 connected to all seed nodes
   ✔  When I have a base node BASE2 connected to all seed nodes
   ✔  When I have wallet SENDER connected to base node BASE1
   ✔  And I have a ffi wallet FFI_WALLET connected to base node BASE2
   ✔  When I have wallet RECEIVER connected to base node BASE2
   ✔  When I have mining node MINER connected to base node BASE1 and wallet SENDER
   ✔  When mining node MINER mines 10 blocks
   ✔  Then I wait for wallet SENDER to have at least 5000000 uT
   ✘  And I send 2400000 uT from wallet SENDER to wallet FFI_WALLET at fee 5
      Step failed:
      Defined: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature:158:9
      Matched: integration_tests\tests\steps\wallet_steps.rs:791:1
      Step panicked. Captured output: Transaction from SENDER to FFI_WALLET with amount 2400000 at fee 5 failed to be broadcasted
      Client {
          base_nodes: {},
          blocks: {},
          miners: {},
          ffi_wallets: {},
          wallets: {},
          merge_mining_proxies: {},
          transactions: {},
          wallet_addresses: {},
          utxos: {},
          output_hash: None,
          pre_image: None,
          wallet_connected_to_base_node: {
              "SENDER": "BASE1",
              "RECEIVER": "BASE2",
          },
          seed_nodes: [],
          wallet_tx_ids: {},
          errors: [],
          last_imported_tx_ids: [],
          last_merge_miner_response: Null,
      }
]]></failure></testcase><testcase name="Scenario: As a client I want to receive a one-sided transaction: ?\C:\projects\tari\integration_tests\tests\features\WalletFFI.feature:174:5" time="63.8073797"><system-out><![CDATA[  Scenario: As a client I want to receive a one-sided transaction
   ✔  Given I have a seed node SEED
   ✔  When I have a base node BASE1 connected to all seed nodes
   ✔  When I have a base node BASE2 connected to all seed nodes
   ✔  When I have wallet SENDER connected to base node BASE1
   ✔  And I have a ffi wallet FFI_RECEIVER connected to base node BASE2
   ✔  When I have mining node MINER connected to base node BASE1 and wallet SENDER
   ✔  When mining node MINER mines 10 blocks
   ✔  Then I wait for wallet SENDER to have at least 5000000 uT
   ✔  Then I send a one-sided transaction of 1000000 uT from SENDER to FFI_RECEIVER at fee 20
   ✔  When mining node MINER mines 2 blocks
   ✔  Then all nodes are at height 12
   ✔  Then ffi wallet FFI_RECEIVER detects AT_LEAST 1 ffi transactions to be TRANSACTION_STATUS_FAUX_UNCONFIRMED
   ✔  And I send 1000000 uT from wallet SENDER to wallet FFI_RECEIVER at fee 20
   ✔  Then ffi wallet FFI_RECEIVER detects AT_LEAST 1 ffi transactions to be TRANSACTION_STATUS_BROADCAST
   ✔  When mining node MINER mines 5 blocks
   ✔  Then all nodes are at height 17
   ✔  Then ffi wallet FFI_RECEIVER detects AT_LEAST 1 ffi transactions to be TRANSACTION_STATUS_FAUX_CONFIRMED
   ✔  And I stop ffi wallet FFI_RECEIVER
]]></system-out></testcase></testsuite><testsuite id="9" name="Feature: Wallet Querying: ?\C:\projects\tari\integration_tests\tests\features\WalletQuery.feature" package="testsuite/Feature: Wallet Querying: ?\C:\projects\tari\integration_tests\tests\features\WalletQuery.feature" tests="2" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:17:29.1803476Z" time="0.0029677"><testcase name="Scenario: As a wallet I want to submit a transaction: ?\C:\projects\tari\integration_tests\tests\features\WalletQuery.feature:14:3" time="0.002083"><system-out><![CDATA[  Scenario: As a wallet I want to submit a transaction
]]></system-out></testcase><testcase name="Scenario: As a wallet I cannot submit a locked coinbase transaction: ?\C:\projects\tari\integration_tests\tests\features\WalletQuery.feature:26:3" time="0.0008847"><system-out><![CDATA[  Scenario: As a wallet I cannot submit a locked coinbase transaction
]]></system-out></testcase></testsuite><testsuite id="10" name="Feature: Wallet Recovery: ?\C:\projects\tari\integration_tests\tests\features\WalletRecovery.feature" package="testsuite/Feature: Wallet Recovery: ?\C:\projects\tari\integration_tests\tests\features\WalletRecovery.feature" tests="2" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:17:29.1835205Z" time="54.1816046"><testcase name="Scenario: Wallet recovery with connected base node staying online: ?\C:\projects\tari\integration_tests\tests\features\WalletRecovery.feature:8:5" time="38.8199596"><system-out><![CDATA[  Scenario: Wallet recovery with connected base node staying online
   ✔  Given I have a seed node NODE
   ✔  When I have wallet WALLET_A connected to all seed nodes
   ✔  When I have wallet WALLET_B connected to all seed nodes
   ✔  When I have mining node MINER connected to base node NODE and wallet WALLET_A
   ✔  When mining node MINER mines 10 blocks
   ✔  When I mine 5 blocks on NODE
   ✔  Then all nodes are at height 15
   ✔  When I have mining node MINER_B connected to base node NODE and wallet WALLET_B
   ✔  When mining node MINER_B mines 2 blocks
   ✔  When I mine 5 blocks on NODE
   ✔  Then all nodes are at height 22
   ✔  When I have wallet WALLET_D connected to all seed nodes
   ✔  When I mine 5 blocks on NODE
   ✔  Then all nodes are at height 27
]]></system-out></testcase><testcase name="Scenario: Recover one-sided payments: ?\C:\projects\tari\integration_tests\tests\features\WalletRecovery.feature:55:5" time="15.361645"><system-out><![CDATA[  Scenario: Recover one-sided payments
   ✔  Given I have a seed node NODE
   ✔  When I have wallet WALLET_A connected to all seed nodes
   ✔  When I have wallet WALLET_B connected to all seed nodes
   ✔  When I have mining node MINER connected to base node NODE and wallet WALLET_A
   ✔  When mining node MINER mines 10 blocks
   ✔  Then all nodes are at height 10
   ✔  When mining node MINER mines 5 blocks
   ✔  Then all nodes are at height 15
   ✔  When mining node MINER mines 5 blocks
   ✔  Then all nodes are at height 20
   ✔  When mining node MINER mines 5 blocks
   ✔  Then all nodes are at height 25
]]></system-out></testcase></testsuite><testsuite id="11" name="Feature: Wallet Transactions: ?\C:\projects\tari\integration_tests\tests\features\WalletTransactions.feature" package="testsuite/Feature: Wallet Transactions: ?\C:\projects\tari\integration_tests\tests\features\WalletTransactions.feature" tests="3" errors="0" failures="0" hostname="localhost" timestamp="2023-05-11T11:17:55.9280611Z" time="148.1673522"><testcase name="Scenario: Wallet sending and receiving one-sided transactions: ?\C:\projects\tari\integration_tests\tests\features\WalletTransactions.feature:8:3" time="63.1665177"><system-out><![CDATA[  Scenario: Wallet sending and receiving one-sided transactions
   ✔  Given I have a seed node NODE
   ✔  When I have 1 base nodes connected to all seed nodes
   ✔  When I have wallet WALLET_A connected to all seed nodes
   ✔  When I have wallet WALLET_B connected to all seed nodes
   ✔  When I have wallet WALLET_C connected to all seed nodes
   ✔  When I have mining node MINER connected to base node NODE and wallet WALLET_A
   ✔  When mining node MINER mines 15 blocks
   ✔  Then all nodes are at height 15
   ✔  When I wait 5 seconds
   ✔  When I wait for wallet WALLET_A to have at least 55000000000 uT
   ✔  Then I send a one-sided transaction of 1000000 uT from WALLET_A to WALLET_B at fee 100
   ✔  Then I send a one-sided transaction of 1000000 uT from WALLET_A to WALLET_B at fee 100
   ✔  When mining node MINER mines 5 blocks
   ✔  Then all nodes are at height 20
   ✔  Then I wait for wallet WALLET_B to have at least 2000000 uT
   ✔  Then I send 900000 uT from wallet WALLET_B to wallet WALLET_B at fee 20
   ✔  Then I wait for wallet WALLET_B to have less than 1100000 uT
   ✔  When mining node MINER mines 5 blocks
   ✔  Then all nodes are at height 25
   ✔  Then I wait for wallet WALLET_B to have at least 1900000 uT
   ✔  Then I send a one-sided transaction of 1500000 uT from WALLET_B to WALLET_C at fee 20
   ✔  Then I wait for wallet WALLET_B to have less than 1000000 uT
   ✔  When mining node MINER mines 5 blocks
   ✔  Then all nodes are at height 30
   ✔  Then I wait for wallet WALLET_C to have at least 1500000 uT
]]></system-out></testcase><testcase name="Scenario: Wallet sending and receiving one-sided stealth transactions: ?\C:\projects\tari\integration_tests\tests\features\WalletTransactions.feature:38:3" time="58.2137451"><system-out><![CDATA[  Scenario: Wallet sending and receiving one-sided stealth transactions
   ✔  Given I have a seed node NODE
   ✔  When I have 1 base nodes connected to all seed nodes
   ✔  When I have wallet WALLET_A connected to all seed nodes
   ✔  When I have wallet WALLET_B connected to all seed nodes
   ✔  When I have wallet WALLET_C connected to all seed nodes
   ✔  When I have mining node MINER connected to base node NODE and wallet WALLET_A
   ✔  When mining node MINER mines 15 blocks
   ✔  Then all nodes are at height 15
   ✔  When I wait for wallet WALLET_A to have at least 55000000000 uT
   ✔  Then I send a one-sided stealth transaction of 1000000 uT from WALLET_A to WALLET_B at fee 100
   ✔  Then I send a one-sided stealth transaction of 1000000 uT from WALLET_A to WALLET_B at fee 100
   ✔  When mining node MINER mines 5 blocks
   ✔  Then all nodes are at height 20
   ✔  Then I wait for wallet WALLET_B to have at least 2000000 uT
   ✔  Then I send 900000 uT from wallet WALLET_B to wallet WALLET_B at fee 20
   ✔  Then I wait for wallet WALLET_B to have less than 2100000 uT
   ✔  When mining node MINER mines 5 blocks
   ✔  Then all nodes are at height 25
   ✔  Then I wait for wallet WALLET_B to have at least 1900000 uT
   ✔  Then I send a one-sided stealth transaction of 1500000 uT from WALLET_B to WALLET_C at fee 20
   ✔  Then I wait for wallet WALLET_B to have less than 1000000 uT
   ✔  When mining node MINER mines 5 blocks
   ✔  Then all nodes are at height 30
   ✔  Then I wait for wallet WALLET_C to have at least 1500000 uT
]]></system-out></testcase><testcase name="Scenario: Create burn transaction: ?\C:\projects\tari\integration_tests\tests\features\WalletTransactions.feature:407:3" time="26.7870894"><system-out><![CDATA[  Scenario: Create burn transaction
   ✔  Given I have a seed node NODE
   ✔  When I have 2 base nodes connected to all seed nodes
   ✔  When I have wallet WALLET_A connected to all seed nodes
   ✔  When I have wallet WALLET_B connected to all seed nodes
   ✔  When I have mining node MINER_A connected to base node NODE and wallet WALLET_A
   ✔  When I have mining node MINER_B connected to base node NODE and wallet WALLET_B
   ✔  When mining node MINER_A mines 12 blocks
   ✔  When mining node MINER_B mines 3 blocks
   ✔  Then all nodes are at height 15
   ✔  When I wait for wallet WALLET_A to have at least 221552530060 uT
   ✔  When I create a burn transaction of 201552500000 uT from WALLET_A at fee 100
   ✔  When mining node MINER_B mines 5 blocks
   ✔  Then all nodes are at height 20
   ✔  Then wallet WALLET_A detects all transactions as Mined_Confirmed
   ✔  When I wait for wallet WALLET_A to have at least 20000000000 uT
]]></system-out></testcase></testsuite><testsuite id="12" name="Feature: Wallet Transfer: ?\C:\projects\tari\integration_tests\tests\features\WalletTransfer.feature" package="testsuite/Feature: Wallet Transfer: ?\C:\projects\tari\integration_tests\tests\features\WalletTransfer.feature" tests="1" errors="0" failures="1" hostname="localhost" timestamp="2023-05-11T11:18:35.2407514Z" time="526.2892537"><testcase name="Scenario: As a wallet send to a wallet connected to a different base node: ?\C:\projects\tari\integration_tests\tests\features\WalletTransfer.feature:9:3" time="526.2892537"><failure type="Step Panicked" message="Step panicked. Captured output: Transaction from WALLET_A to WALLET_B with amount 5 at fee 10 failed to be broadcasted"><![CDATA[  Scenario: As a wallet send to a wallet connected to a different base node
   ✔  Given I have a seed node SEED_A
   ✔  When I have a seed node SEED_B
   ✔  When I have a base node NODE_A connected to all seed nodes
   ✔  When I have a base node NODE_B connected to all seed nodes
   ✔  When I have wallet WALLET_A with 10T connected to base node NODE_A
   ✔  When I have wallet WALLET_B connected to base node NODE_B
   ✔  When I wait 5 seconds
   ✘  When I transfer 5T from WALLET_A to WALLET_B
      Step failed:
      Defined: ?\C:\projects\tari\integration_tests\tests\features\WalletTransfer.feature:17:5
      Matched: integration_tests\tests\steps\wallet_steps.rs:1357:1
      Step panicked. Captured output: Transaction from WALLET_A to WALLET_B with amount 5 at fee 10 failed to be broadcasted
      Client {
          base_nodes: {},
          blocks: {},
          miners: {},
          ffi_wallets: {},
          wallets: {},
          merge_mining_proxies: {},
          transactions: {},
          wallet_addresses: {},
          utxos: {},
          output_hash: None,
          pre_image: None,
          wallet_connected_to_base_node: {
              "WALLET_A": "NODE_A",
              "WALLET_B": "NODE_B",
          },
          seed_nodes: [],
          wallet_tx_ids: {},
          errors: [],
          last_imported_tx_ids: [],
          last_merge_miner_response: Null,
      }
]]></failure></testcase></testsuite></testsuites>