########################################################################################################################
#                                                                                                                      #
#                                          Common Configuration Options                                                #
#                                                                                                                      #
########################################################################################################################

[common]
#override_from="dibbler"
#base_path="<HOME>/.tari"
#data_dir="data"

[auto_update]
# This interval in seconds to check for software updates. Setting this to 0 disables checking.
check_interval = 300

[dibbler.auto_update]
# Customize the hosts that are used to check for updates. These hosts must contain update information in DNS TXT records.
update_uris = ["updates.dibbler.taripulse.com"]
# Customize the location of the update SHA hashes and maintainer-signed signature.
# "auto_update.hashes_url" = "https://<address>/hashes.txt"
# "auto_update.hashes_sig_url" = "https://<address>/hashes.txt.sig"

[metrics]
# server_bind_address = "127.0.0.1:5577"
# push_endpoint = http://localhost:9091/metrics/job/base-node
# Configuration options for dibbler testnet

[dibbler.p2p.seeds]
dns_seeds = ["seeds.dibbler.tari.com"]
peer_seeds = [
    # 333388d1cbe3e2bd17453d052f
    "c2eca9cf32261a1343e21ed718e79f25bfc74386e9305350b06f62047f519347::/onion3/6yxqk2ybo43u73ukfhyc42qn25echn4zegjpod2ccxzr2jd5atipwzqd:18141",
    # 555575715a49fc242d756e52ca
    "42fcde82b44af1de95a505d858cb31a422c56c4ac4747fbf3da47d648d4fc346::/onion3/2l3e7ysmihc23zybapdrsbcfg6omtjtfkvwj65dstnfxkwtai2fawtyd:18141",
    # 77771f53be07fab4be5f1e1ff7
    "50e6aa8f6c50f1b9d9b3d438dfd2a29cfe1f3e3a650bd9e6b1e10f96b6c38f4d::/onion3/7s6y3cz5bnewlj5ypm7sekhgvqjyrq4bpaj5dyvvo7vxydj7hsmyf5ad:18141",
    # 9999016f1f3a6162dddf5a45aa
    "36a9df45e1423b5315ffa7a91521924210c8e1d1537ad0968450f20f21e5200d::/onion3/v24qfheti2rztlwzgk6v4kdbes3ra7mo3i2fobacqkbfrk656e3uvnid:18141",
    # bbbb8358387d81c388fadb4649
    "be128d570e8ec7b15c101ee1a56d6c56dd7d109199f0bd02f182b71142b8675f::/onion3/ha422qsy743ayblgolui5pg226u42wfcklhc5p7nbhiytlsp4ir2syqd:18141",
    # eeeeb0a943ed143e613a135392
    "3e0321c0928ca559ab3c0a396272dfaea705efce88440611a38ff3898b097217::/onion3/sl5ledjoaisst6d4fh7kde746dwweuge4m4mf5nkzdhmy57uwgtb7qqd:18141",
    # 66664a0f95ce468941bb9de228
    "b0f797e7413b39b6646fa370e8394d3993ead124b8ba24325c3c07a05e980e7e::/ip4/35.177.93.69/tcp/18189",
    # 22221bf814d5e524fce9ba5787
    "0eefb45a4de9484eca74846a4f47d2c8d38e76be1fec63b0112bd00d297c0928::/ip4/13.40.98.39/tcp/18189",
    #Â 4444a0efd8388739d563bdd979
    "544ed2baed414307e119d12894e27f9ddbdfa2fd5b6528dc843f27903e951c30::/ip4/13.40.189.176/tcp/18189"
]

########################################################################################################################
#                                                                                                                      #
#                                          Base Node Configuration Options                                             #
#                                                                                                                      #
########################################################################################################################

# If you are not running a Tari Base node, you can simply leave everything in this section commented out. Base nodes
# help maintain the security of the Tari token and are the surest way to preserve your privacy and be 100% sure that
# no-one is cheating you out of your money.

[base_node]
# Selected network
network = "dibbler"
# The socket to expose for the gRPC base node server
grpc_address = "/ip4/127.0.0.1/tcp/18142"

# Spin up and use a built-in Tor instance. This only works on macos/linux and you must comment out tor_control_address below.
# This requires that the base node was built with the optional "libtor" feature flag.
#use_libtor = true

[dibbler.base_node]
# A path to the file that stores your node identity and secret key
identity_file = "config/base_node_id_dibbler.json"

[base_node.p2p]
# The node's publicly-accessible hostname. This is the host name that is advertised on the network so that
# peers can find you.
# _NOTE_: If using the `tor` transport type, public_address will be ignored and an onion address will be
# automatically configured
public_address = "/ip4/172.2.3.4/tcp/18189"

# Optionally bind an additional TCP socket for inbound Tari P2P protocol commms.
# Use cases include:
# - allowing wallets to locally connect to their base node, rather than through tor, when used in conjunction with `tor_proxy_bypass_addresses`
# - multiple P2P addresses, one public over DNS and one private over TOR
# - a "bridge" between TOR and TCP-only nodes
# auxiliary_tcp_listener_address = "/ip4/127.0.0.1/tcp/9998"

[base_node.p2p.transport]
# -------------- Transport configuration --------------
# Use TCP to connect to the Tari network. This transport can only communicate with TCP/IP addresses, so peers with
# e.g. tor onion addresses will not be contactable.
#transport = "tcp"
# The address and port to listen for peer connections over TCP.
tcp.listener_address = "/ip4/0.0.0.0/tcp/18189"
# Configures a tor proxy used to connect to onion addresses. All other traffic uses direct TCP connections.
# This setting is optional however, if it is not specified, this node will not be able to connect to nodes that
# only advertise an onion address.
tcp.tor_socks_address = "/ip4/127.0.0.1/tcp/36050"
tcp.tor_socks_auth = "none"

# # Configures the node to run over a tor hidden service using the Tor proxy. This transport recognises ip/tcp,
# # onion v2, onion v3 and dns addresses.
#type = "tor"
# Address of the tor control server
tor.control_address = "/ip4/127.0.0.1/tcp/9051"
# Authentication to use for the tor control server
tor.control_auth = "none" # or "password=xxxxxx"
# The onion port to use.
tor.onion_port = 18141
# When these peer addresses are encountered when dialing another peer, the tor proxy is bypassed and the connection is made
# directly over TCP. /ip4, /ip6, /dns, /dns4 and /dns6 are supported.
tor.proxy_bypass_addresses = []
#tor.proxy_bypass_addresses = ["/dns4/my-foo-base-node/tcp/9998"]
# When using the tor transport and set to true, outbound TCP connections bypass the tor proxy. Defaults to false for better privacy
tor.proxy_bypass_for_outbound_tcp = false

# Use a SOCKS5 proxy transport. This transport recognises any addresses supported by the proxy.
#type = "socks5"
# The address of the SOCKS5 proxy
# Traffic will be forwarded to tcp.listener_address
socks.proxy_address = "/ip4/127.0.0.1/tcp/9050"
socks.auth = "none" # or "username_password=username:xxxxxxx"

[base_node.p2p.dht]
auto_join = true
database_url = "base_node_dht.db"
# do we allow test addresses to be accepted like 127.0.0.1
allow_test_addresses = false

[base_node.p2p.dht.saf]

[base_node.lmdb]
#init_size_bytes = 1000000
#grow_size_bytes = 1600000
#resize_threshold_bytes = 1600000

[base_node.storage]
# Sets the pruning horizon.
#pruning_horizon = 0
# Set to true to record all reorgs. Recorded reorgs can be viewed using the list-reorgs command.
track_reorgs = true

########################################################################################################################
#                                                                                                                      #
#                                          Wallet Configuration Options                                                #
#                                                                                                                      #
########################################################################################################################

[wallet]
# Override common.network for wallet
override_from = "dibbler"

# The relative folder to store your local key data and transaction history. DO NOT EVER DELETE THIS FILE unless you
#  a) have backed up your seed phrase and
#  b) know what you are doing!
db_file = "wallet/wallet.dat"

# The socket to expose for the gRPC wallet server. This value is ignored if grpc_enabled is false.
grpc_address = "/ip4/127.0.0.1/tcp/18143"

# Console wallet password
# Should you wish to start your console wallet without typing in your password, the following options are available:
# 1. Start the console wallet with the --password=secret argument, or
# 2. Set the environment variable TARI_WALLET_PASSWORD=secret before starting the console wallet, or
# 3. Set the "password" key in this [wallet] section of the config
# password = "secret"

# WalletNotify
# Allows you to execute a script or program when these transaction events are received by the console wallet:
# - transaction received
# - transaction sent
# - transaction cancelled
# - transaction mined but unconfirmed
# - transaction mined and confirmed
# An example script is available here: applications/tari_console_wallet/src/notifier/notify_example.sh
# notify = "/path/to/script"

# This is the timeout period that will be used to monitor TXO queries to the base node (default = 60). Larger values
# are needed for wallets with many (>1000) TXOs to be validated.
#base_node_query_timeout = 180
# The amount of seconds added to the current time (Utc) which will then be used to check if the message has
# expired or not when processing the message (default = 10800).
#saf_expiry_duration = 10800
# This is the number of block confirmations required for a transaction to be considered completely mined and
# confirmed. (default = 3)
#transaction_num_confirmations_required = 3
# This is the timeout period that will be used for base node broadcast monitoring tasks (default = 60)
#transaction_broadcast_monitoring_timeout = 180
# This is the timeout period that will be used for chain monitoring tasks (default = 60)
#transaction_chain_monitoring_timeout = 60
# This is the timeout period that will be used for sending transactions directly (default = 20)
#transaction_direct_send_timeout = 180
# This is the timeout period that will be used for sending transactions via broadcast mode (default = 60)
#transaction_broadcast_send_timeout = 180
# This is the size of the event channel used to communicate transaction status events to the wallet's UI. A busy console
# wallet doing thousands of bulk payments or used for stress testing needs a fairly big size (>10000) (default = 1000).
#transaction_event_channel_size = 25000
# This is the size of the event channel used to communicate base node events to the wallet. A busy console
# wallet doing thousands of bulk payments or used for stress testing needs a fairly big size (>3000) (default = 250).
#base_node_event_channel_size = 3500
# This is the size of the event channel used to communicate output manager events to the wallet. A busy console
# wallet doing thousands of bulk payments or used for stress testing needs a fairly big size (>3000) (default = 250).
#output_manager_event_channel_size = 3500
# This is the size of the event channel used to communicate base node update events to the wallet. A busy console
# wallet doing thousands of bulk payments or used for stress testing needs a fairly big size (>300) (default = 50).
#base_node_update_publisher_channel_size = 500
# If a large amount of tiny valued uT UTXOs are used as inputs to a transaction, the fee may be larger than
# the transaction amount. Set this value to `false` to allow spending of "dust" UTXOs for small valued
# transactions (default = true).
#prevent_fee_gt_amount = false
# This option specifies the transaction routing mechanism as being directly between wallets, making
# use of store and forward or using any combination of these.
# (options: "DirectOnly", "StoreAndForwardOnly", DirectAndStoreAndForward". default: "DirectAndStoreAndForward").
#transaction_routing_mechanism = "DirectAndStoreAndForward"

# When running the console wallet in command mode, use these values to determine what "stage" and timeout to wait
# for sent transactions.
# The stages are:
# - "DirectSendOrSaf" - The transaction was initiated and was accepted via Direct Send or Store And Forward.
# - "Negotiated" - The recipient replied and the transaction was negotiated.
# - "Broadcast" - The transaction was broadcast to the base node mempool.
# - "MinedUnconfirmed" - The transaction was successfully detected as mined but unconfirmed on the blockchain.
# - "Mined" - The transaction was successfully detected as mined and confirmed on the blockchain.

# The default values are: "Broadcast", 300
#command_send_wait_stage = "Broadcast"
#command_send_wait_timeout = 300

# The base nodes that the wallet should use for service requests and tracking chain state.
# base_node_service_peers = ["public_key::net_address", ...]
# base_node_service_peers = ["e856839057aac496b9e25f10821116d02b58f20129e9b9ba681b830568e47c4d::/onion3/exe2zgehnw3tvrbef3ep6taiacr6sdyeb54be2s25fpru357r4skhtad:18141"]

# Configuration for the wallet's base node service
# The refresh interval, defaults to 10 seconds
#base_node_service_refresh_interval = 30
# The maximum age of service requests in seconds, requests older than this are discarded
#base_node_service_request_max_age = 180

#[base_node.transport.tor]
#control_address = "/ip4/127.0.0.1/tcp/9051"
#control_auth_type = "none" # or "password"
# Required for control_auth_type = "password"
#control_auth_password = "super-secure-password"

[wallet.p2p]

[wallet.p2p.transport]
# # Configures the node to run over a tor hidden service using the Tor proxy. This transport recognises ip/tcp,
# # onion v2, onion v3 and dns addresses.
type = "tor"
# Address of the tor control server
tor.control_address = "/ip4/127.0.0.1/tcp/9051"
# Authentication to use for the tor control server
tor.control_auth = "none" # or "password=xxxxxx"
# The onion port to use.
tor.onion_port = 18141
# When these peer addresses are encountered when dialing another peer, the tor proxy is bypassed and the connection is made
# directly over TCP. /ip4, /ip6, /dns, /dns4 and /dns6 are supported.
tor.proxy_bypass_addresses = []
# When using the tor transport and set to true, outbound TCP connections bypass the tor proxy. Defaults to false for better privacy
tor.proxy_bypass_for_outbound_tcp = false

[dibbler.wallet]
network = "dibbler"



########################################################################################################################
#                                                                                                                      #
#                                                Miner Configuration Options                                           #
#                                                                                                                      #
########################################################################################################################

[miner]
# Number of mining threads
# Default: number of logical CPU cores
#num_mining_threads=8

# GRPC address of base node
#base_node_grpc_address = "127.0.0.1:18142"

# GRPC address of console wallet
#wallet_grpc_address = "127.0.0.1:18143"

# Start mining only when base node is bootstrapped
# and current block height is on the tip of network
# Default: true
#mine_on_tip_only=true

# Will check tip with node every N seconds and restart mining
# if height already taken and option `mine_on_tip_only` is set
# to true
# Default: 30 seconds
#validate_tip_timeout_sec=30

# Stratum Mode configuration
# mining_pool_address = "miningcore.tari.com:3052"
# mining_wallet_address = "YOUR_WALLET_PUBLIC_KEY"
# mining_worker_name = "worker1"

########################################################################################################################
#                                                                                                                      #
#                                             Merge Mining Configuration Options                                      #
#                                                                                                                      #
########################################################################################################################

[merge_mining_proxy]
#override_from = "dibbler"
monerod_url = [# stagenet
    "http://stagenet.xmr-tw.org:38081",
    "http://stagenet.community.xmr.to:38081",
    "http://monero-stagenet.exan.tech:38081",
    "http://xmr-lux.boldsuck.org:38081",
    "http://singapore.node.xmr.pm:38081",
]
base_node_grpc_address = "/ip4/127.0.0.1/tcp/18142"
console_wallet_grpc_address = "/ip4/127.0.0.1/tcp/18143"

# Address of the tari_merge_mining_proxy application
listener_address = "/ip4/127.0.0.1/tcp/18081"

# In sole merged mining, the block solution is usually submitted to the Monero blockchain
# (monerod) as well as to the Tari blockchain, then this setting should be "true". With pool
# merged mining, there is no sense in submitting the solution to the Monero blockchain as the
# pool does that, then this setting should be "false". (default = true).
submit_to_origin = true

# The merge mining proxy can either wait for the base node to achieve initial sync at startup before it enables mining,
# or not. If merge mining starts before the base node has achieved initial sync, those Tari mined blocks will not be
# accepted. (Default value = true; will wait for base node initial sync).
#wait_for_initial_sync_at_startup = true

# Monero auth params
monerod_username = ""
monerod_password = ""
monerod_use_auth = false

#[dibbler.merge_mining_proxy]
# Put any network specific settings here



########################################################################################################################
#                                                                                                                      #
#                                         Validator Node Configuration Options                                         #
#                                                                                                                      #
########################################################################################################################

[validator_node]

phase_timeout = 30

# If set to false, there will be no scanning at all.
scan_for_assets = true
# How often do we want to scan the base layer for changes.
new_asset_scanning_interval = 10
# If set then only the specific assets will be checked.
# assets_allow_list = ["<pubkey>"]


constitution_auto_accept = false
constitution_management_polling_interval_in_seconds = 10
constitution_management_polling_interval = 5
constitution_management_confirmation_time = 50
########################################################################################################################
#                                                                                                                      #
#                                          Collectibles Configuration Options                                          #
#                                                                                                                      #
########################################################################################################################

[collectibles]
# GRPC address of validator node
#validator_node_grpc_address = "/ip4/127.0.0.1/tcp/18144"

# GRPC address of base node
#base_node_grpc_address = "/ip4/127.0.0.1/tcp/18142"

# GRPC address of wallet
#wallet_grpc_address = "/ip4/127.0.0.1/tcp/18143"
