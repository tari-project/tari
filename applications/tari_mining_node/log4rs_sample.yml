# A sample log configuration file for running in release mode. By default, this configuration splits up log messages to
# three destinations:
#    * Console: For log messages with level INFO and higher
#    * log/mining-node/network.log: INFO-level logs related to the comms crate. This file will be quite busy since there
#      are lots of P2P debug messages, and so this traffic is segregated from the application log messages
#
#  See https://docs.rs/log4rs/0.8.3/log4rs/encode/pattern/index.html for deciphering the log pattern. The log format
#  used in this sample configuration prints messages as:
#  timestamp [target] LEVEL message
refresh_rate: 30 seconds
appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console
    encoder:
      pattern: "{d(%H:%M)} {h({l}):5} {m}{n}"
    filters:
      - kind: threshold
        level: info
  # An appender named "base_layer" that writes to a file with a custom pattern encoder
  mining_node:
    kind: rolling_file
    path: "log/mining-node/mining_node.log"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10mb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "log/mining-node/mining_node.{}.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S.%f)} [{t}] [Thread:{I}] {l:5} {m}{n}"

# Set the default logging level to "warn" and attach the "stdout" appender to the root
root:
  level: warn
  appenders:
    - stdout

loggers:
  # mining_node
  tari::application:
    level: debug
    appenders:
      - mining_node
    additive: false
  tari_mining_node:
    level: debug
    appenders:
      - mining_node
    additive: false
  tari_mining_node:
    level: info
    appenders:
      - stdout
    additive: false
