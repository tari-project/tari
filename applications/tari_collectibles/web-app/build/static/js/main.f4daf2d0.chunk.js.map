{"version":3,"sources":["components/AssetCard.js","components/Spinner.js","binding.js","helpers.js","Dashboard.js","Create.js","Manage.js","AssetManager.js","AccountDashboard.js","NewAccount.js","Setup.js","App.js","reportWebVitals.js","index.js"],"names":["AssetCard","asset","heading","style","actions","height","display","flexDirection","Card","sx","CardMedia","component","pb","image","image_url","alt","CardContent","flexGrox","Typography","gutterBottom","variant","name","description","CardActions","CircularIndeterminate","Box","CircularProgress","templateIds","templateParameters","a","console","log","invoke","offset","count","assetPubKey","committee","assetPublicKey","amount","toAddress","token","fromAddressId","sendToAddress","tokenId","passphrase","id","commands","command_create_db","command_assets_create","command_assets_get_registration","command_assets_list_owned","command_assets_list_registered_assets","command_asset_create_initial_checkpoint","command_next_asset_public_key","command_asset_wallets_create","command_asset_wallets_get_balance","command_asset_wallets_list","command_asset_wallets_get_latest_address","command_asset_wallets_create_address","command_asset_wallets_send_to","command_tip004_mint_token","command_tip004_list_tokens","command_tip721_transfer_from","command_wallets_create","command_wallets_list","command_wallets_unlock","command_wallets_seed_words","toHexString","byteArray","Array","from","byte","toString","slice","join","DashboardContent","props","state","error","isLoading","assets","this","setState","binding","outputs","map","o","unique_id","mined_height","mined_in_block","public_key","asset_public_key","length","Button","size","to","Grid","item","xs","sm","md","Container","maxWidth","mt","mb","py","container","spacing","renderTokens","React","Component","Create","dropFile","payload","addFileToIPFS","save","isSaving","tip002","push","tip002Data","symbol","decimals","parseInt","totalSupply","protobuf","load","then","root","InitRequest","lookupType","errMsg","verify","Error","message","create","arr","encode","finish","template_id","template_data_version","template_data","tip003","tip004","tip721","publicKey","tip003Data","res","history","onNameChanged","e","target","value","onTipCheckboxChanged","tip","obj","checked","onTip002DataChanged","field","onDescriptionChanged","onNewCommitteePubKeyChanged","newCommitteePubKey","onAddCommitteeMember","onDeleteCommitteeMember","index","filter","_","i","onImageChanged","selectFile","dialog","open","filters","extensions","multiple","filePath","parts","split","cid","command","Command","processing","stdout","on","line","spawn","stderr","child","tip001","cleanup","appWindow","listen","unlisten","Stack","Alert","severity","FormControlLabel","control","Switch","onChange","onTip001Changed","label","FormGroup","TextField","color","disabled","setImage","setCid","onClick","type","onTip003Changed","List","ListItem","ListItemText","primary","ImageSwitch","setMode","ImageUrl","useState","url","setUrl","ImageUpload","ImageSelector","mode","src","width","m","IpfsImage","setSrc","useMemo","fetch","method","responseType","ResponseType","Binary","response","typedArray","Uint8Array","data","blob","Blob","buffer","reader","FileReader","onloadend","result","onerror","readAsDataURL","withRouter","cardStyle","transitionDuration","margin","Manage","ownedAssets","favoriteAssets","lg","AssetManagerContent","loading","saving","assetDefinition","registration","initialCommittee","initialCommitee","checkpointUniqueId","template_parameters","features","template_ids_implemented","AssetDefinition","msg","setMsg","tip004MintTokenName","setTip004MintTokenName","includes","contents","JSON","stringify","filename","path","homeDir","home","fs","writeFile","useParams","AccountDashboard","refreshBalance","balance","refresh721","tip721Data","tokens","forEach","token_id","address","addressId","onGenerateReceiveAddress","receiveAddress","onSendToChanged","onSendToAmountChanged","sendToAmount","onSend","openTip721SendDraft","tip721SendDraftId","on721Send","match","params","assetInfo","templateParams","tip002Params","decode","toObject","hidden","Paper","pt","Math","pow","elevation","NewAccount","onAssetPublicKeyChanged","onSave","preventDefault","SeedWords","wallet","password","seedWords","setSeedWords","setError","useEffect","words","catch","chunks","len","n","chunk","CreateWallet","setPassword","password2","setPassword2","creating","setCreating","undefined","setWallet","valid","helperText","UnlockWallet","setAuthenticated","unlocking","setUnlocking","isError","unlock","setLoading","wallets","mdTheme","createTheme","palette","deepPurple","secondary","pink","IconButtonLink","icon","renderLink","itemProps","ref","role","IconButton","edge","ListItemLink","button","ListItemIcon","AccountsMenu","accounts","setAccounts","walletId","ListSubheader","disableGutters","secondaryAction","ProtectedRoute","authenticated","children","App","setWalletId","r","className","theme","CssBaseline","Drawer","Toolbar","Divider","flexGrow","overflow","Dashboard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4daf2d0.chunk.js","sourcesContent":["//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nexport default function AssetCard({ asset, heading, style, actions }) {\r\n  style = style || {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  };\r\n  return (\r\n    <Card sx={style}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        sx={{ pb: \"5%\" }}\r\n        image={asset.image_url}\r\n        alt=\"random\"\r\n      />\r\n      <CardContent sx={{ flexGrox: 1 }}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {heading || asset.name}\r\n        </Typography>\r\n        <Typography>{asset.description}</Typography>\r\n      </CardContent>\r\n      {actions ? <CardActions>{actions}</CardActions> : <span />}\r\n    </Card>\r\n  );\r\n}\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport { CircularProgress, Box } from \"@mui/material\";\r\n\r\nexport default function CircularIndeterminate() {\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n}\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport { invoke } from \"@tauri-apps/api/tauri\";\r\n\r\nasync function command_assets_create(\r\n  name,\r\n  description,\r\n  image,\r\n  templateIds,\r\n  templateParameters\r\n) {\r\n  console.log(\"command_assets_create:\", templateParameters);\r\n  return await invoke(\"assets_create\", {\r\n    name,\r\n    description,\r\n    image,\r\n    templateIds,\r\n    templateParameters,\r\n  });\r\n}\r\n\r\nasync function command_assets_list_owned() {\r\n  return await invoke(\"assets_list_owned\", {});\r\n}\r\n\r\nasync function command_assets_list_registered_assets(offset, count) {\r\n  return await invoke(\"assets_list_registered_assets\", { offset, count });\r\n}\r\n\r\nasync function command_assets_get_registration(assetPubKey) {\r\n  return await invoke(\"assets_get_registration\", { assetPubKey });\r\n}\r\n\r\nasync function command_asset_create_initial_checkpoint(assetPubKey, committee) {\r\n  return await invoke(\"assets_create_initial_checkpoint\", {\r\n    assetPubKey,\r\n    committee,\r\n  });\r\n}\r\n\r\nasync function command_asset_wallets_get_latest_address(assetPublicKey) {\r\n  return await invoke(\"asset_wallets_get_latest_address\", { assetPublicKey});\r\n}\r\n\r\nasync function command_asset_wallets_create_address(assetPublicKey) {\r\n  return await invoke(\"asset_wallets_create_address\", { assetPublicKey});\r\n}\r\n\r\nasync function command_asset_wallets_send_to(assetPublicKey, amount, toAddress) {\r\n  return await invoke(\"asset_wallets_send_to\", {assetPublicKey, amount, toAddress});\r\n}\r\n\r\nasync function command_next_asset_public_key() {\r\n  return await invoke(\"next_asset_public_key\", {});\r\n}\r\n\r\n\r\nasync function command_tip004_mint_token(assetPublicKey, token) {\r\n  return await invoke(\"tip004_mint_token\", {assetPublicKey, token});\r\n}\r\n\r\nasync function command_tip004_list_tokens(assetPublicKey) {\r\n  return await invoke(\"tip004_list_tokens\", {assetPublicKey});\r\n}\r\n\r\nasync function command_tip721_transfer_from(assetPublicKey, fromAddressId, sendToAddress, tokenId) {\r\n  console.log(fromAddressId, sendToAddress, tokenId);\r\n  return await invoke(\"tip721_transfer_from\", {assetPublicKey,  fromAddressId, sendToAddress, tokenId});\r\n}\r\n\r\nasync function command_wallets_create(passphrase, name) {\r\n  return await invoke(\"wallets_create\", { passphrase, name });\r\n}\r\n\r\nasync function command_wallets_unlock(id, passphrase) {\r\n  return await invoke(\"wallets_unlock\", { id, passphrase });\r\n}\r\n\r\nasync function command_wallets_seed_words(id, passphrase) {\r\n  return await invoke(\"wallets_seed_words\", { id, passphrase });\r\n}\r\n\r\nasync function command_wallets_list() {\r\n  return await invoke(\"wallets_list\");\r\n}\r\n\r\nasync function command_asset_wallets_create(assetPublicKey) {\r\n  return await invoke(\"asset_wallets_create\", { assetPublicKey });\r\n}\r\n\r\nasync function command_asset_wallets_list() {\r\n  return await invoke(\"asset_wallets_list\", {});\r\n}\r\n\r\nasync function command_create_db() {\r\n  return await invoke(\"create_db\", {});\r\n}\r\n\r\nasync function command_asset_wallets_get_balance(assetPublicKey) {\r\n  return await invoke(\"asset_wallets_get_balance\", {assetPublicKey});\r\n}\r\n\r\nconst commands = {\r\n  command_create_db,\r\n  command_assets_create,\r\n  command_assets_get_registration,\r\n  command_assets_list_owned,\r\n  command_assets_list_registered_assets,\r\n  command_asset_create_initial_checkpoint,\r\n  command_next_asset_public_key,\r\n  command_asset_wallets_create,\r\n  command_asset_wallets_get_balance,\r\n  command_asset_wallets_list,\r\n  command_asset_wallets_get_latest_address,\r\n  command_asset_wallets_create_address,\r\n  command_asset_wallets_send_to,\r\n  command_tip004_mint_token,\r\n  command_tip004_list_tokens,\r\n  command_tip721_transfer_from,\r\n  command_wallets_create,\r\n  command_wallets_list,\r\n  command_wallets_unlock,\r\n  command_wallets_seed_words,\r\n};\r\n\r\nexport default commands;\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nexport function toHexString(byteArray) {\r\n    return Array.from(byteArray, function(byte) {\r\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n    }).join('')\r\n}\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport { Container, Grid, Button } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { AssetCard, Spinner } from \"./components\";\r\nimport binding from \"./binding\";\r\nimport { toHexString } from \"./helpers\";\r\n\r\n// const explorerUrl = (blockHash) => `https:://explore.tari.com/block/${blockHash.toString(\"hex\")}`;\r\n\r\nclass DashboardContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isLoading: false,\r\n      assets: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    try {\r\n      let outputs = await binding.command_assets_list_registered_assets(0, 100);\r\n      this.setState({\r\n        // TODO: Fetch asset metadata from somewhere\r\n        assets: outputs.map((o) => ({\r\n          name: toHexString(o.unique_id),\r\n          description: `Asset registration at block #${\r\n            o.mined_height\r\n          } (${toHexString(o.mined_in_block)})`,\r\n          public_key: o.asset_public_key ? toHexString(o.asset_public_key) : \"\",\r\n          image_url: \"https://source.unsplash.com/random\",\r\n        })),\r\n        isLoading: false,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      this.setState({\r\n        error: \"Could not load assets:\" + err,\r\n        isLoading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  renderTokens() {\r\n    const { assets, isLoading } = this.state;\r\n    if (!isLoading && assets.length === 0) {\r\n      return <div>No assets found.</div>;\r\n    }\r\n\r\n    return this.state.assets.map((asset) => {\r\n      const actions = (\r\n        <Button\r\n          size=\"small\"\r\n          to={`/view/${(asset.unique_id || \"\").toString(\"hex\")}`}\r\n        >\r\n          View\r\n        </Button>\r\n      );\r\n\r\n      return (\r\n        <Grid\r\n          item\r\n          key={`${asset.name}-${asset.public_key}`}\r\n          xs={12}\r\n          sm={6}\r\n          md={4}\r\n        >\r\n          <AssetCard asset={asset} actions={actions} />\r\n        </Grid>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, error } = this.state;\r\n\r\n    return (\r\n      <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4, py: 8 }}>\r\n        <Grid container spacing={4}>\r\n          {this.renderTokens()}\r\n          {isLoading ? <Spinner /> : <span />}\r\n          {error ? <p>{error}</p> : <span />}\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashboardContent;\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\nimport React, {useState, useMemo} from \"react\";\r\nimport {\r\n    Alert,\r\n    Button,\r\n    Container,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Stack,\r\n    Switch,\r\n    TextField,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport binding from \"./binding\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {appWindow} from \"@tauri-apps/api/window\";\r\nimport {dialog} from \"@tauri-apps/api\";\r\nimport {Command} from \"@tauri-apps/api/shell\";\r\nimport {fetch, ResponseType} from \"@tauri-apps/api/http\";\r\nimport protobuf from \"protobufjs\";\r\n\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"Asset1\",\r\n            description: \"\",\r\n            image: \"\",\r\n            cid: \"\",\r\n            error: \"\",\r\n            isSaving: false,\r\n            tip001: true,\r\n            tip002: false,\r\n            tip003: true,\r\n            tip004: false,\r\n            tip721: false,\r\n            tip002Data: {\r\n                totalSupply: 0,\r\n                symbol: \"NAH\",\r\n                decimals: 2,\r\n            },\r\n            tip003Data: {\r\n                committee: [],\r\n            },\r\n            newCommitteePubKey: \"\",\r\n        };\r\n\r\n        this.cleanup = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.cleanup = appWindow.listen(\"tauri://file-drop\", this.dropFile);\r\n        console.log(\"didmount\");\r\n\r\n    }\r\n\r\n    dropFile = async ({payload}) => {\r\n        if (payload.length > 0) {\r\n            // only use the first file if multiple are dropped\r\n            this.addFileToIPFS(payload[0]);\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.cleanup) {\r\n            this.cleanup.then((unlisten) => unlisten());\r\n        }\r\n    }\r\n\r\n    save = async () => {\r\n        this.setState({isSaving: true});\r\n        let {name, description, image} = this.state;\r\n        try {\r\n            let templateIds = [1];\r\n            let templateParameters = [];\r\n            if (this.state.tip002) {\r\n                console.log(\"tip002\");\r\n                templateIds.push(2);\r\n                console.log(this.state.tip002Data);\r\n                let payload = {\r\n                    symbol: this.state.tip002Data.symbol,\r\n                    decimals: parseInt(this.state.tip002Data.decimals),\r\n                    totalSupply: parseInt(this.state.tip002Data.totalSupply),\r\n                };\r\n\r\n                await protobuf.load(\"proto/tip002.proto\").then(function (root) {\r\n                    let InitRequest = root.lookupType(\"tip002.InitRequest\");\r\n\r\n                    var errMsg = InitRequest.verify(payload);\r\n                    if (errMsg) {\r\n                        throw new Error(errMsg);\r\n                    }\r\n                    var message = InitRequest.create(payload);\r\n                    console.log(\"msg:\", message);\r\n                    var buffer = InitRequest.encode(message);\r\n                    let arr = buffer.finish();\r\n                    console.log(\"buffer\", arr);\r\n\r\n                    templateParameters.push({\r\n                        template_id: 2,\r\n                        template_data_version: 1,\r\n                        template_data: Array.from(arr),\r\n                    });\r\n                });\r\n            }\r\n\r\n            if (this.state.tip003) {\r\n                templateIds.push(3);\r\n            }\r\n            if (this.state.tip004) {\r\n                templateIds.push(4);\r\n            }\r\n            if (this.state.tip721) {\r\n                templateIds.push(721);\r\n            }\r\n\r\n            let publicKey = await binding.command_assets_create(\r\n                name,\r\n                description,\r\n                image,\r\n                templateIds,\r\n                templateParameters\r\n            );\r\n\r\n            // TODO: How to create the initial checkpoint?\r\n            if (this.state.tip003) {\r\n                let res = await binding.command_asset_create_initial_checkpoint(\r\n                    publicKey,\r\n                    this.state.tip003Data.committee\r\n                );\r\n\r\n                console.log(res);\r\n            }\r\n            let history = this.props.history;\r\n\r\n            history.push(`/assets/manage/${publicKey}`);\r\n        } catch (err) {\r\n            this.setState({\r\n                error: \"Could not create asset: \" + err.message,\r\n            });\r\n            console.log(err);\r\n        }\r\n        this.setState({isSaving: false});\r\n    };\r\n\r\n    onNameChanged = (e) => {\r\n        this.setState({name: e.target.value});\r\n    };\r\n\r\n    onTipCheckboxChanged = (e, tip) => {\r\n        let obj = {};\r\n        obj[tip] = e.target.checked;\r\n        this.setState(obj);\r\n    };\r\n\r\n    onTip002DataChanged = (field, e) => {\r\n        let tip002Data = {};\r\n        tip002Data[field] = e.target.value;\r\n        tip002Data = {...this.state.tip002Data, ...tip002Data};\r\n        this.setState({tip002Data: tip002Data});\r\n    };\r\n\r\n    // onNumberInitialTokensChanged = (e) => {\r\n    //   this.setState({ numberInitialTokens: e.target.value });\r\n    // };\r\n\r\n    onDescriptionChanged = (e) => {\r\n        this.setState({\r\n            description: e.target.value,\r\n        });\r\n    };\r\n\r\n    onNewCommitteePubKeyChanged = (e) => {\r\n        this.setState({\r\n            newCommitteePubKey: e.target.value,\r\n        });\r\n    };\r\n\r\n    onAddCommitteeMember = () => {\r\n        let committee = [...this.state.tip003Data.committee];\r\n        committee.push(this.state.newCommitteePubKey);\r\n        let tip003Data = {...this.state.tip003Data, ...{committee: committee}};\r\n        console.log(committee);\r\n        this.setState({\r\n            tip003Data,\r\n            newCommitteePubKey: \"\",\r\n        });\r\n    };\r\n\r\n    onDeleteCommitteeMember = (index) => {\r\n        let committee = this.state.tip003Data.committee.filter(function (\r\n            _,\r\n            i,\r\n            arr\r\n        ) {\r\n            return i !== parseInt(index);\r\n        });\r\n        let tip003Data = {...this.state.tip003Data, ...{committee}};\r\n\r\n        this.setState({tip003Data});\r\n    };\r\n\r\n    onImageChanged = (e) => {\r\n        this.setState({\r\n            image: e.target.value,\r\n        });\r\n    };\r\n\r\n    selectFile = async () => {\r\n        const filePath = await dialog.open({\r\n            filters: [\r\n                {name: \"image types\", extensions: [\"png\", \"jpg\", \"jpeg\", \"gif\"]}, // TODO more formats\r\n            ],\r\n            multiple: false,\r\n        });\r\n        await this.addFileToIPFS(filePath);\r\n    };\r\n\r\n    addFileToIPFS = async (filePath) => {\r\n        const parts = filePath.split(\"/\");\r\n        const name = parts[parts.length - 1];\r\n        // unfortunately the ipfs http /add api doesn't play nicely with the tauri http client\r\n        // resulting in \"file argument 'path' is required\"\r\n        // so we'll shell out to the ipfs command\r\n        let cid = \"\";\r\n        try {\r\n            const command = new Command(\"ipfs\", [\"add\", \"-Q\", filePath]);\r\n            let processing = false;\r\n            command.stdout.on(\"data\", (line) => {\r\n                if (!processing) {\r\n                    processing = true;\r\n                    cid = line;\r\n                    const cp = new Command(\"ipfs\", [\r\n                        \"files\",\r\n                        \"cp\",\r\n                        `/ipfs/${cid}`,\r\n                        `/${name}`,\r\n                    ]);\r\n                    cp.spawn();\r\n                    this.setState({cid});\r\n                }\r\n            });\r\n            command.stderr.on(\"data\", (line) => {\r\n                console.error(\"error: \", line);\r\n            });\r\n            const child = command.spawn();\r\n            return child;\r\n\r\n            // console.log(\"command\", command);\r\n            // const { success, output, error } = commandOutput(command);\r\n            // if (success) {\r\n            //   const cid = output;\r\n            //   console.log(\"cid\", cid);\r\n            //   const command = await runCommand(\"ipfs\", [\r\n            //     \"files\",\r\n            //     \"cp\",\r\n            //     `/ipfs/${cid}`,\r\n            //     `/${name}`,\r\n            //   ]);\r\n            //   const { error } = commandOutput(command);\r\n            //   if (error) console.error(\"error: \", error);\r\n            // } else {\r\n            //   console.error(\"error: \", error);\r\n            // }\r\n        } catch (e) {\r\n            // todo: display error\r\n            console.error(\"catch error: \", e);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container maxWidth=\"lg\" sx={{mt: 4, mb: 4, py: 8}}>\r\n                <Typography variant=\"h3\" sx={{mb: \"30px\"}}>\r\n                    Create new asset\r\n                </Typography>\r\n                <Stack>\r\n                    {this.state.error ? (\r\n                        <Alert severity=\"error\">{this.state.error}</Alert>\r\n                    ) : (\r\n                        <span/>\r\n                    )}\r\n                    <Typography variant=\"h4\">Templates Implemented</Typography>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                onChange={this.onTip001Changed}\r\n                                checked={this.state.tip001}\r\n                            />\r\n                        }\r\n                        label=\"001 Metadata (required)\"\r\n                    />\r\n\r\n                    <FormGroup>\r\n                        <TextField\r\n                            id=\"publicKey\"\r\n                            label=\"Public Key\"\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            value={this.state.publicKey}\r\n                            disabled\r\n                            style={{\"-webkit-text-fill-color\": \"#ddd\"}}\r\n                        ></TextField>\r\n                        <TextField\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            variant=\"filled\"\r\n                            color=\"primary\"\r\n                            value={this.state.name}\r\n                            onChange={this.onNameChanged}\r\n                            disabled={this.state.isSaving || !this.state.tip001}\r\n                        ></TextField>\r\n                        <TextField\r\n                            id=\"description\"\r\n                            label=\"Description\"\r\n                            variant=\"filled\"\r\n                            color=\"primary\"\r\n                            value={this.state.description}\r\n                            onChange={this.onDescriptionChanged}\r\n                            disabled={this.state.isSaving || !this.state.tip001}\r\n                        ></TextField>\r\n\r\n                        <p>Image</p>\r\n                        <ImageSelector\r\n                            selectFile={this.selectFile}\r\n                            setImage={(image) => this.setState({image})}\r\n                            cid={this.state.cid}\r\n                            setCid={(cid) => this.setState({cid})}\r\n                            image={this.state.image}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    onClick={(e) => this.onTipCheckboxChanged(e, \"tip002\")}\r\n                                    checked={this.state.tip002}\r\n                                />\r\n                            }\r\n                            label=\"002 (ERC 20-like)\"\r\n                        />\r\n\r\n                        <TextField\r\n                            id=\"tip002_symbol\"\r\n                            label=\"Symbol\"\r\n                            variant=\"filled\"\r\n                            color=\"primary\"\r\n                            value={this.state.tip002.symbol}\r\n                            onChange={(e) => this.onTip002DataChanged(\"symbol\", e)}\r\n                            disabled={this.state.isSaving || !this.state.tip002}\r\n                        ></TextField>\r\n\r\n                        <TextField\r\n                            id=\"tip002_total_supply\"\r\n                            label=\"Total Supply\"\r\n                            variant=\"filled\"\r\n                            color=\"primary\"\r\n                            value={this.state.tip002.totalSupply}\r\n                            type=\"number\"\r\n                            onChange={(e) => this.onTip002DataChanged(\"totalSupply\", e)}\r\n                            disabled={this.state.isSaving || !this.state.tip002}\r\n                        ></TextField>\r\n\r\n                        <TextField\r\n                            id=\"tip002_decimals\"\r\n                            label=\"Decimals\"\r\n                            variant=\"filled\"\r\n                            color=\"primary\"\r\n                            value={this.state.tip002.decimals}\r\n                            onChange={(e) => this.onTip002DataChanged(\"decimals\", e)}\r\n                            disabled={this.state.isSaving || !this.state.tip002}\r\n                        ></TextField>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    onClick={this.onTip003Changed}\r\n                                    checked={this.state.tip003}\r\n                                    disabled={true}\r\n                                />\r\n                            }\r\n                            label=\"003 Sidechain with committees\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <List>\r\n                            {this.state.tip003Data.committee.map((item, index) => {\r\n                                return (\r\n                                    <ListItem>\r\n                                        <ListItemText primary={item}></ListItemText>\r\n                                    </ListItem>\r\n                                );\r\n                            })}\r\n                        </List>\r\n                        <TextField\r\n                            label=\"Validator node public key\"\r\n                            id=\"newCommitteePubKey\"\r\n                            value={this.state.newCommitteePubKey}\r\n                            onChange={this.onNewCommitteePubKeyChanged}\r\n                            disabled={this.state.isSaving || !this.state.tip003}\r\n                        ></TextField>\r\n                        <Button\r\n                            onClick={this.onAddCommitteeMember}\r\n                            disabled={this.state.isSaving || !this.state.tip003}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    onClick={(e) => this.onTipCheckboxChanged(e, \"tip721\")}\r\n                                    checked={this.state.tip721}\r\n                                />\r\n                            }\r\n                            label=\"721 (ERC 721-like)\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    onClick={(e) => this.onTipCheckboxChanged(e, \"tip004\")}\r\n                                    checked={this.state.tip004}\r\n                                />\r\n                            }\r\n                            label=\"Allow tokens to be minted after registration (Requires 721)\"\r\n                        />\r\n                    </FormGroup>\r\n                    <Button onClick={this.save} disabled={this.state.isSaving}>\r\n                        Save\r\n                    </Button>\r\n                </Stack>\r\n            </Container>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nconst ImageSwitch = ({setMode}) => {\r\n    return (\r\n        <div>\r\n            <Button onClick={() => setMode(\"url\")}>HTTP or IPFS URL</Button>\r\n            <Button onClick={() => setMode(\"upload\")}>Upload file to IPFS</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ImageUrl = ({setImage}) => {\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    return (\r\n        <div>\r\n            <p>Link to a web or ipfs url</p>\r\n            <TextField\r\n                id=\"image\"\r\n                label=\"Image (url)\"\r\n                variant=\"filled\"\r\n                color=\"primary\"\r\n                value={url}\r\n                onChange={(e) => setUrl(e.target.value)}\r\n            ></TextField>\r\n            <Button onClick={() => setImage(url)}>Save</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ImageUpload = ({selectFile}) => {\r\n    return (\r\n        <div>\r\n            <p>Select an image, or drag and drop an image onto this window</p>\r\n            <Button onClick={selectFile}>Click to Select Image</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ImageSelector = ({cid, image, selectFile, setImage, setCid}) => {\r\n    const [mode, setMode] = useState(\"\");\r\n\r\n    if (image) {\r\n        return (\r\n            <div>\r\n                <img src={image} alt=\"\" width=\"200px\"/>\r\n                <br/>\r\n                <p onClick={() => setImage(\"\")}>Change</p>\r\n            </div>\r\n        );\r\n    }\r\n    if (cid) {\r\n        return <IpfsImage cid={cid} setCid={setCid}/>;\r\n    }\r\n\r\n    let display;\r\n\r\n    switch (mode) {\r\n        case \"url\":\r\n            display = <ImageUrl setImage={setImage}/>;\r\n            break;\r\n        case \"upload\":\r\n            display = <ImageUpload selectFile={selectFile}/>;\r\n            break;\r\n        default:\r\n            display = <ImageSwitch setMode={(m) => setMode(m)}/>;\r\n    }\r\n\r\n    return display;\r\n};\r\n\r\nconst IpfsImage = ({cid, setCid}) => {\r\n    const [src, setSrc] = useState(\"\");\r\n\r\n    useMemo(async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `http://localhost:5001/api/v0/cat?arg=${cid}`,\r\n                {\r\n                    method: \"POST\",\r\n                    responseType: ResponseType.Binary,\r\n                }\r\n            );\r\n            const typedArray = Uint8Array.from(response.data);\r\n            const blob = new Blob([typedArray.buffer]);\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => setSrc(reader.result);\r\n            reader.onerror = () => console.error(\"error\");\r\n            reader.readAsDataURL(blob);\r\n        } catch (e) {\r\n            // handle error\r\n            console.error(e);\r\n        }\r\n    }, [cid]);\r\n\r\n    if (src) {\r\n        return (\r\n            <div>\r\n                <img src={src} alt=\"\" width=\"200px\"/>\r\n                <br/>\r\n                <p onClick={() => setCid(\"\")}>Change</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <p>ipfs image loading...</p>;\r\n};\r\n\r\nexport default withRouter(Create);\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\nimport React from \"react\";\r\nimport {\r\n  Alert,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport binding from \"./binding\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst cardStyle = {\r\n  width: \"20vw\",\r\n  transitionDuration: \"0.3s\",\r\n  height: \"30vw\",\r\n  margin: \"1vw\",\r\n  display: \"block\",\r\n  flexDirection: \"column\",\r\n};\r\n\r\nclass Manage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: \"\",\r\n      ownedAssets: [],\r\n      favoriteAssets: [\r\n        /* todo */\r\n      ],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ error: \"\" });\r\n    try {\r\n      let assets = await binding.command_assets_list_owned();\r\n      // console.log(assets);\r\n      this.setState({\r\n        ownedAssets: assets,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n      this.setState({ error: \"Failed to load assets: \" + err });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4, py: 8 }}>\r\n        {this.state.error ? (\r\n          <Alert severity=\"error\">{this.state.error}</Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <Typography variant=\"h3\">Assets Issued</Typography>\r\n        <Grid container spacing={4}>\r\n          {this.state.ownedAssets.map((asset) => (\r\n            <Grid item key={asset.public_key} xs={12} sm={6} md={4} lg={4}>\r\n              <Card style={cardStyle}>\r\n                <Link to={`/assets/manage/${asset.public_key}`}>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    sx={{ pb: \"5%\", height: \"20vw\", width: \"20vw\" }}\r\n                    image={asset.image}\r\n                    alt=\"random\"\r\n                  ></CardMedia>\r\n                </Link>\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {asset.name}\r\n                  </Typography>\r\n                  <Typography>{asset.description}</Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Link to={`/assets/manage/${asset.public_key}`}>View</Link>\r\n                  {/*<Button size=\"small\">Edit</Button>*/}\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Manage);\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport React, { useState } from \"react\";\r\nimport {Box, Button, Container, FormGroup, TextField, Typography} from \"@mui/material\";\r\nimport { useParams, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport binding from \"./binding\";\r\nimport { fs, path } from \"@tauri-apps/api\";\r\nimport {esES} from \"@mui/material/locale\";\r\n\r\nclass AssetManagerContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: \"\",\r\n      loading: true,\r\n      saving: false,\r\n      assetDefinition: {},\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { assetPubKey } = this.props;\r\n    let registration = await binding.command_assets_get_registration(\r\n      assetPubKey\r\n    );\r\n    console.log(\"registration:\", registration);\r\n    let assetDefinition = {\r\n      public_key: assetPubKey,\r\n      initialCommittee: registration.initialCommitee,\r\n      checkpointUniqueId: registration.checkpointUniqueId,\r\n      template_parameters: registration.features.template_parameters,\r\n      templateIds: registration.features.template_ids_implemented\r\n    };\r\n    this.setState({ loading: false, assetDefinition });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4, py: 8 }}>\r\n        <Typography>Asset: {this.props.assetPubKey}</Typography>\r\n\r\n        <Box>\r\n          <AssetDefinition\r\n            assetPubKey={this.props.assetPubKey}\r\n            assetDefinition={this.state.assetDefinition}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst AssetDefinition = (props) => {\r\n  const { assetPubKey, assetDefinition} = props;\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [tip004MintTokenName, setTip004MintTokenName] = useState(\"Token1\");\r\n  let tip004 = false;\r\n  let tip721 = false;\r\n  if (assetDefinition.templateIds) {\r\n  tip004 = assetDefinition.templateIds.includes(4);\r\n  tip721 = assetDefinition.templateIds.includes(721);\r\n\r\n}\r\n  const contents = JSON.stringify(assetDefinition, null, 2);\r\n  async function save() {\r\n    const filename = `${assetPubKey}.json`;\r\n    try {\r\n      const home = await path.homeDir();\r\n      const filePath = `${home}${filename}`;\r\n      await fs.writeFile({\r\n        contents,\r\n        path: filePath,\r\n      });\r\n      setMsg(`Asset definition file written to: ${filePath}`);\r\n    } catch (e) {\r\n      setMsg(`Error: ${e}`);\r\n    }\r\n  }\r\n\r\n  async function mint() {\r\n    try {\r\n      await binding.command_tip004_mint_token(assetPubKey, tip004MintTokenName);\r\n    }catch(err) {\r\n      console.error(err);\r\n      setMsg(`Error: ${err.message}`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Asset Definition</p>\r\n      <p>{msg}</p>\r\n      <p>Use this asset definition json file for your validator nodes</p>\r\n      <pre>{contents}</pre>\r\n      <Button id=\"download\" onClick={save}>\r\n        Save asset definition file\r\n      </Button>\r\n\r\n      { tip721 ? (\r\n        <Container>\r\n          { tip004 ? (\r\n              <FormGroup>\r\n                <Typography>Mint a token</Typography>\r\n                <TextField id=\"tip004Name\" label=\"Name/Description\" value={tip004MintTokenName} onChange={(e) => setTip004MintTokenName(e.target.value)}></TextField>\r\n                <Button id=\"mint\" onClick={mint}>Mint</Button>\r\n              </FormGroup>\r\n          ) : \"\" }\r\n          <div>\r\n            TODO: get tokens\r\n          </div>\r\n        </Container>\r\n      ): \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nAssetManagerContent.propTypes = {\r\n  assetPubKey: PropTypes.string,\r\n};\r\n\r\nfunction AssetManager() {\r\n  const { assetPubKey } = useParams();\r\n  return <AssetManagerContent assetPubKey={assetPubKey} />;\r\n}\r\n\r\nexport default withRouter(AssetManager);\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport React from \"react\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Alert, Button, Container, FormGroup, Grid, Paper, Stack, TextField, Typography} from \"@mui/material\";\r\nimport binding from \"./binding\";\r\nimport protobuf from \"protobufjs\";\r\n\r\nclass AccountDashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props);\r\n        this.state = {\r\n            error: null,\r\n            isSaving: false,\r\n            tip002: false,\r\n            tip004: false,\r\n            tip721: false,\r\n            tip002Data: {},\r\n            tip721Data: {},\r\n            assetPubKey: props.match.params.assetPubKey,\r\n            balance: -1,\r\n            receiveAddress: \"\",\r\n            sendToAddress: \"\",\r\n            tip721SendDraftId: \"\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n\r\n            let receiveAddress = await binding.command_asset_wallets_get_latest_address(this.state.assetPubKey);\r\n            let assetInfo = await binding.command_assets_get_registration(this.state.assetPubKey);\r\n            console.log(assetInfo);\r\n            let tip002 = assetInfo.features[\"template_ids_implemented\"].includes(2);\r\n            let tip004 = assetInfo.features[\"template_ids_implemented\"].includes(4);\r\n            let tip721 = assetInfo.features[\"template_ids_implemented\"].includes(721);\r\n            let tip002Data = {};\r\n            if (tip002) {\r\n                await this.refreshBalance();\r\n                let templateParams = assetInfo.features[\"template_parameters\"];\r\n                let tip002Params = templateParams.filter((item) => {\r\n                    return item.template_id === 2\r\n                })[0];\r\n\r\n                await protobuf.load(\"/proto/tip002.proto\").then(function (root) {\r\n                    let InitRequest = root.lookupType(\"tip002.InitRequest\");\r\n                    let message = InitRequest.decode(tip002Params[\"template_data\"]);\r\n                    tip002Data = InitRequest.toObject(message, {});\r\n                    console.log(tip002Data);\r\n                });\r\n            }\r\n            let tip721Data = {};\r\n            if (tip004) {\r\n               tip721Data = await this.refresh721();\r\n            }\r\n            this.setState({receiveAddress: receiveAddress.public_key, tip002, tip004, tip721, tip002Data, tip721Data});\r\n        } catch (err) {\r\n            console.error(err);\r\n            this.setState({error: err.message});\r\n        }\r\n    }\r\n\r\n    refreshBalance = async () => {\r\n        this.setState({error: null});\r\n        let balance = await binding.command_asset_wallets_get_balance(this.state.assetPubKey);\r\n        console.log(\"balance\", balance);\r\n        this.setState({balance});\r\n        return balance;\r\n    }\r\n\r\n    refresh721 = async() => {\r\n        let tip721Data = {};\r\n            let tokens = await binding.command_tip004_list_tokens(this.state.assetPubKey);\r\n            console.log(tokens);\r\n            tip721Data.tokens = [];\r\n            await tokens.forEach((token) => {\r\n                tip721Data.tokens.push({\r\n                    tokenId: token[0].token_id,\r\n                    address: token[1].public_key,\r\n                    addressId: token[1].id,\r\n                    token: token[0].token\r\n                })\r\n            });\r\n            return tip721Data;\r\n    }\r\n\r\n    onGenerateReceiveAddress = async () => {\r\n        console.log(\"hello\");\r\n        try {\r\n            this.setState({error: null});\r\n            let receiveAddress = await binding.command_asset_wallets_create_address(this.state.assetPubKey);\r\n            console.log(\"new address\", receiveAddress);\r\n            this.setState({receiveAddress: receiveAddress.public_key});\r\n        } catch (err) {\r\n            console.error(err);\r\n            this.setState({error: err.message});\r\n        }\r\n    }\r\n\r\n    onSendToChanged = async (e) => {\r\n        this.setState({sendToAddress: e.target.value});\r\n    }\r\n\r\n    onSendToAmountChanged = async (e) => {\r\n        this.setState({sendToAmount: parseInt(e.target.value)});\r\n    }\r\n    onSend = async () => {\r\n        try {\r\n            this.setState({error: \"\"});\r\n            let result = await binding.command_asset_wallets_send_to(this.state.assetPubKey, this.state.sendToAmount, this.state.sendToAddress);\r\n            console.log(result);\r\n            this.setState({\r\n                sendToAddress: \"\", sendToAmount: \"\"\r\n            });\r\n            await this.refreshBalance();\r\n        } catch (err) {\r\n            console.error(\"Error sending:\", err);\r\n            this.setState({error: err.message});\r\n        }\r\n    }\r\n    openTip721SendDraft = async(tokenId) => {\r\n       this.setState({\r\n           tip721SendDraftId: tokenId\r\n       })\r\n    }\r\n    on721Send = async(fromAddressId, tokenId) => {\r\n        try {\r\n            this.setState({error: \"\"});\r\n            let result = await binding.command_tip721_transfer_from(this.state.assetPubKey, fromAddressId, this.state.sendToAddress,  tokenId);\r\n            console.log(result);\r\n            let tip721Data = await this.refresh721();\r\n            this.setState({ tip721Data});\r\n            await this.refreshBalance();\r\n        } catch (err) {\r\n            console.error(\"Error sending:\", err);\r\n            this.setState({error: err.message});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container sx={{mt: 4, mb: 4}}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        {this.state.error ? (\r\n                            <Alert severity=\"error\">{this.state.error}</Alert>\r\n                        ) : (\r\n                            <span/>\r\n                        )}\r\n                        <Typography variant=\"h3\" sx={{mb: \"30px\"}}>\r\n                            Asset Details\r\n                        </Typography>\r\n                        <Container>\r\n                            <Typography variant=\"h4\">Info</Typography>\r\n                            <Stack spacing=\"2\">\r\n                                <Typography>\r\n                                    Pub key: {this.state.assetPubKey}\r\n                                </Typography>\r\n                                <Typography>Receive Address: {this.state.receiveAddress}</Typography>\r\n                                <Button onClick={this.onGenerateReceiveAddress}>Generate new receive\r\n                                    address</Button>\r\n                            </Stack>\r\n                        </Container>\r\n                    </Grid>\r\n                    <Grid item xs={3} hidden={!this.state.tip002}>\r\n                        <Paper>\r\n                            <Container sx={{pt: 2}}>\r\n                                <Stack spacing={2}>\r\n                                    <Typography variant=\"h5\">TIP002</Typography>\r\n                                    <Typography>Balance: {this.state.balance / Math.pow(10, this.state.tip002Data.decimals)} {this.state.tip002Data.symbol}</Typography>\r\n\r\n                                    <h6>Send</h6>\r\n                                    <TextField onChange={this.onSendToChanged}\r\n                                               value={this.state.sendToAddress} label=\"Receiver address\"></TextField>\r\n                                    <TextField onChange={this.onSendToAmountChanged} value={this.state.sendToAmount}\r\n                                               type=\"number\" label=\"Amount\"></TextField>\r\n                                    <Button onClick={this.onSend}>Send</Button>\r\n                                </Stack>\r\n                            </Container>\r\n                        </Paper>\r\n                    </Grid>\r\n                    {this.state.tip721 ? (<Grid item xs={12} hidden={!this.state.tip721}>\r\n                                <Stack spacing={2}>\r\n                                    <Typography variant=\"h5\">TIP721</Typography>\r\n                                    <Grid container spacing={2}>\r\n                                        {this.state.tip721Data.tokens.map((token) => {\r\n                                            return (<Grid item xs={2}>\r\n                                                <Paper>\r\n                                                    <Container>\r\n                                                        <Stack spacing={2}><Typography variant=\"h6\">#{token.tokenId}: {token.token}</Typography>\r\n                                                        <Button onClick={(e) => this.openTip721SendDraft(token.tokenId)}>Send</Button>\r\n                                                            { this.state.tip721SendDraftId === token.tokenId ? (\r\n                                                                <Paper elevation={2}>\r\n                                                                    <Container>\r\n                                                                        <Stack spacing={2}>\r\n                                                                            <TextField value={this.state.sendToAddress} onChange={this.onSendToChanged} label=\"To\"></TextField>\r\n                                                                            <Button onClick={(e) => this.on721Send(token.addressId, token.tokenId)}>Submit</Button>\r\n                                                                        </Stack>\r\n                                                                    </Container>\r\n                                                                </Paper>\r\n                                                            ) : \"\"}\r\n                                                        </Stack>\r\n                                                    </Container>\r\n                                                </Paper>\r\n\r\n                                            </Grid>)\r\n                                        })}\r\n                                    </Grid>\r\n                                </Stack>\r\n                    </Grid>) : \"\"}\r\n\r\n                </Grid>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AccountDashboard);\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Container,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport binding from \"./binding\";\r\n\r\nclass NewAccount extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error: null,\r\n      isSaving: false,\r\n      assetPublicKey: \"\",\r\n    };\r\n  }\r\n\r\n  onAssetPublicKeyChanged = (e) => {\r\n    this.setState({ assetPublicKey: e.target.value });\r\n  };\r\n\r\n  onSave = async (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state.assetPublicKey);\r\n    this.setState({ isSaving: true, error: null });\r\n    try {\r\n      await binding.command_asset_wallets_create(this.state.assetPublicKey);\r\n      let history = this.props.history;\r\n      let path = `/assets/watched/details/${this.state.assetPublicKey}`;\r\n      console.log(path);\r\n      history.push(path);\r\n      return;\r\n    } catch (e) {\r\n      this.setState({ error: e.message });\r\n      console.error(e);\r\n    }\r\n    this.setState({ isSaving: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4, py: 8 }}>\r\n        <Typography variant=\"h3\" sx={{ mb: \"30px\" }}>\r\n          New asset account\r\n        </Typography>\r\n        <Stack>\r\n          {this.state.error ? (\r\n            <Alert severity=\"error\">{this.state.error}</Alert>\r\n          ) : (\r\n            <span />\r\n          )}\r\n          <TextField\r\n            id=\"publicKey\"\r\n            label=\"Asset Public Key\"\r\n            variant=\"filled\"\r\n            color=\"primary\"\r\n            value={this.state.assetPublicKey}\r\n            onChange={this.onAssetPublicKeyChanged}\r\n            disabled={this.state.isSaving}\r\n          ></TextField>\r\n          <Button onClick={this.onSave} disabled={this.state.isSaving}>\r\n            Save\r\n          </Button>\r\n        </Stack>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NewAccount);\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport {\r\n  Container,\r\n  Button,\r\n  TextField,\r\n  Stack,\r\n  Typography,\r\n  FormGroup, Alert,\r\n} from \"@mui/material\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Spinner } from \"./components\";\r\nimport binding from \"./binding\";\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\n\r\nconst chunk = (arr, len) => {\r\n  const chunks = [];\r\n  let i = 0;\r\n  let n = arr.length;\r\n\r\n  while (i < n) {\r\n    chunks.push(arr.slice(i, (i += len)));\r\n  }\r\n\r\n  return chunks;\r\n};\r\n\r\nconst SeedWords = ({ wallet, password, history }) => {\r\n  const [seedWords, setSeedWords] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  useEffect(() => {\r\n    binding\r\n      .command_wallets_seed_words(wallet.id, password)\r\n      .then((words) => setSeedWords(words))\r\n      .catch((e) => {\r\n\r\n        console.error(\"error: \", e);\r\n        setError(e.message);\r\n      });\r\n  }, [wallet.id, password]);\r\n\r\n  const display = (seedWords) => {\r\n    console.log(seedWords);\r\n    if (seedWords.length === 0) return <Spinner />;\r\n\r\n    const chunks = chunk(seedWords, 6);\r\n    return (\r\n      <div>\r\n        {chunks.map((words, i) => (\r\n          <pre key={i}>{words.join(\" \")}</pre>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h3\" sx={{ mb: \"30px\" }}>\r\n        Seed words\r\n      </Typography>\r\n      {error ? (\r\n          <Alert severity=\"error\">{error}</Alert>\r\n      ) : (\r\n          <span />\r\n      )}\r\n      <p>\r\n        Save these seed words securely. This is the recovery phrase for this\r\n        wallet.\r\n      </p>\r\n      {display(seedWords)}\r\n      <Button\r\n        disabled={seedWords.length === 0}\r\n        onClick={() => history.push(`/dashboard`)}\r\n      >\r\n        I have saved my seed words\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CreateWallet = ({ history }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [creating, setCreating] = useState(false);\r\n  const [wallet, setWallet] = useState(undefined);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  if (wallet)\r\n    return <SeedWords wallet={wallet} password={password} history={history} />;\r\n\r\n  let valid = false;\r\n  let helperText = \"Passwords must match.\";\r\n  if (password === password2) {\r\n    valid = true;\r\n    helperText = \"\";\r\n  }\r\n\r\n  const create = async () => {\r\n    setCreating(true);\r\n    try {\r\n      const wallet = await binding.command_wallets_create(password, \"main\");\r\n      console.log(\"wallet\", wallet);\r\n      setWallet(wallet);\r\n    }\r\n    catch(err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h3\" sx={{ mb: \"30px\" }}>\r\n        Create new wallet\r\n      </Typography>\r\n      <Stack>\r\n        {error ? (\r\n            <Alert severity=\"error\">{error}</Alert>\r\n        ) : (\r\n            <span />\r\n        )}\r\n        <FormGroup>\r\n          <TextField\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            variant=\"filled\"\r\n            color=\"primary\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></TextField>\r\n          <TextField\r\n            id=\"password2\"\r\n            type=\"password\"\r\n            label=\"Confirm Password\"\r\n            variant=\"filled\"\r\n            color=\"primary\"\r\n            value={password2}\r\n            helperText={helperText}\r\n            error={!valid}\r\n            onChange={(e) => setPassword2(e.target.value)}\r\n          ></TextField>\r\n          <Button disabled={!valid || creating} onClick={create}>\r\n            Create wallet\r\n          </Button>\r\n        </FormGroup>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OpenWallet = ({ history, setAuthenticated }) => {\r\n  const { id } = useParams();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [unlocking, setUnlocking] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const isError = error !== \"\";\r\n\r\n  const unlock = async () => {\r\n    setUnlocking(true);\r\n    try {\r\n      await binding.command_wallets_unlock(id, password);\r\n      setAuthenticated(id, password);\r\n      history.push(\"/dashboard\");\r\n    } catch (e) {\r\n      console.error(\"error: \", e);\r\n      setUnlocking(false);\r\n      setError(e.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4, py: 8 }}>\r\n      <Typography variant=\"h3\" sx={{ mb: \"30px\" }}>\r\n        Unlock wallet\r\n      </Typography>\r\n      <Stack>\r\n        <FormGroup>\r\n          <TextField\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            variant=\"filled\"\r\n            color=\"primary\"\r\n            value={password}\r\n            error={isError}\r\n            helperText={error}\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n              setError(\"\");\r\n            }}\r\n          ></TextField>\r\n          <Button disabled={unlocking} onClick={unlock}>\r\n            Unlock\r\n          </Button>\r\n        </FormGroup>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Setup = ({ history }) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    binding\r\n      .command_wallets_list()\r\n      .then((wallets) => {\r\n        console.log(\"wallets\", wallets);\r\n        if (wallets.length > 0) {\r\n          const wallet = wallets[0];\r\n          history.push(`/wallets/${wallet.id}`);\r\n        } else {\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // todo error handling\r\n        console.error(\"wallets_list error:\", e);\r\n      });\r\n  }, [history]);\r\n\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 4, mb: 4, py: 8 }}>\r\n      <CreateWallet history={history} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst UnlockWallet = withRouter(OpenWallet);\r\nexport { UnlockWallet };\r\nexport default withRouter(Setup);\r\n","//  Copyright 2021. The Tari Project\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the\r\n//  following conditions are met:\r\n//\r\n//  1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\r\n//  disclaimer.\r\n//\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\r\n//  following disclaimer in the documentation and/or other materials provided with the distribution.\r\n//\r\n//  3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote\r\n//  products derived from this software without specific prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n//  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n//  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n//  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n//  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\nimport Dashboard from \"./Dashboard\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n  Link as RouterLink,\r\n} from \"react-router-dom\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  CssBaseline,\r\n  Divider,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport AccountBalanceWalletIcon from \"@mui/icons-material/AccountBalanceWallet\";\r\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\r\nimport CreateIcon from \"@mui/icons-material/Create\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport AppsIcon from \"@mui/icons-material/Apps\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\nimport Create from \"./Create\";\r\nimport { deepPurple, pink } from \"@mui/material/colors\";\r\nimport \"./App.css\";\r\nimport * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Manage from \"./Manage\";\r\nimport AssetManager from \"./AssetManager\";\r\nimport AccountDashboard from \"./AccountDashboard\";\r\nimport NewAccount from \"./NewAccount\";\r\nimport Setup, { UnlockWallet } from \"./Setup\";\r\nimport { useEffect, useState } from \"react\";\r\nimport binding from \"./binding\";\r\nimport { Spinner } from \"./components\";\r\n\r\nconst mdTheme = createTheme({\r\n  palette: {\r\n    mode: \"dark\",\r\n    primary: deepPurple,\r\n    secondary: pink,\r\n  },\r\n});\r\n\r\nfunction IconButtonLink(props) {\r\n  const { icon, to } = props;\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef(function Link(itemProps, ref) {\r\n        return <RouterLink to={to} ref={ref} {...itemProps} role={undefined} />;\r\n      }),\r\n    [to]\r\n  );\r\n\r\n  return (\r\n    <IconButton edge=\"end\" aria-label=\"add\" component={renderLink}>\r\n      {icon}\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nfunction ListItemLink(props) {\r\n  const { icon, primary, to } = props;\r\n\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef(function Link(itemProps, ref) {\r\n        return <RouterLink to={to} ref={ref} {...itemProps} role={undefined} />;\r\n      }),\r\n    [to]\r\n  );\r\n\r\n  return (\r\n    <ListItem button component={renderLink}>\r\n      {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n      <ListItemText primary={primary} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n  icon: PropTypes.element,\r\n  primary: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\nconst AccountsMenu = (props) => {\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"refreshing accounts\");\r\n    setError(\"\");\r\n    binding\r\n      .command_asset_wallets_list()\r\n      .then((accounts) => {\r\n        console.log(\"accounts\", accounts);\r\n        setAccounts(accounts);\r\n      })\r\n      .catch((e) => {\r\n        // todo error handling\r\n        console.error(\"accounts_list error:\", e);\r\n        setError(e.message);\r\n      });\r\n  }, [props.walletId]);\r\n\r\n  // todo: hide accounts when not authenticated\r\n  return (\r\n    <div>\r\n      <ListSubheader>\r\n        <ListItem\r\n          component=\"div\"\r\n          disableGutters={true}\r\n          secondaryAction={\r\n            <IconButtonLink\r\n              icon={<AddIcon />}\r\n              to=\"/accounts/new\"\r\n            ></IconButtonLink>\r\n          }\r\n        >\r\n          My Assets\r\n        </ListItem>\r\n      </ListSubheader>\r\n      { error ? <ListItem>{error}</ListItem> : \"\"}\r\n      <List>\r\n        {accounts.map((item) => {\r\n          return (\r\n            <ListItemLink\r\n              primary={item.name || item.assetPublicKey}\r\n              to={`/accounts/${item.asset_public_key}`}\r\n            ></ListItemLink>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\n// only allow access to a Protected Route if the wallet is unlocked\r\nconst ProtectedRoute = ({ authenticated, path, children }) => {\r\n  if (!authenticated) return <Redirect to=\"/unlock\" />;\r\n\r\n  return <Route path={path}>{children}</Route>;\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n  authenticated: PropTypes.bool.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [walletId, setWalletId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // todo: screen lock after x mins no activity\r\n\r\n  // ensure db created or open before other components try to make db calls\r\n  useEffect(() => {\r\n    binding\r\n      .command_create_db()\r\n      .then((r) => setLoading(false))\r\n      .catch((e) => console.error(e));\r\n\r\n  }, []);\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <ThemeProvider theme={mdTheme}>\r\n          <Box sx={{ display: \"flex\" }}>\r\n            <CssBaseline />\r\n\r\n            <Drawer variant=\"permanent\">\r\n              <RouterLink to=\"/\">\r\n                <Toolbar sx={{ display: \"flex\", color: \"white\" }}>\r\n                  Tari Collectibles\r\n                </Toolbar>\r\n              </RouterLink>\r\n              <List>\r\n                <ListItemLink\r\n                  primary=\"Dashboard\"\r\n                  to=\"/dashboard\"\r\n                  icon={<DashboardIcon />}\r\n                />\r\n                <Divider></Divider>\r\n                <AccountsMenu walletId={walletId} />\r\n                <ListSubheader>Issued Assets</ListSubheader>\r\n                <ListItemLink\r\n                  primary=\"Manage\"\r\n                  to=\"/manage\"\r\n                  icon={<AppsIcon />}\r\n                />\r\n                <ListItemLink\r\n                  primary=\"Create\"\r\n                  to=\"/create\"\r\n                  icon={<CreateIcon />}\r\n                />\r\n                <Divider></Divider>\r\n                <ListSubheader>My Wallet</ListSubheader>\r\n                <ListItemLink\r\n                  primary=\"Main\"\r\n                  to={`/wallets/${walletId}`}\r\n                  icon={<AccountBalanceWalletIcon />}\r\n                />\r\n              </List>\r\n            </Drawer>\r\n            <Box\r\n              component=\"main\"\r\n              sx={{ flexGrow: 1, height: \"100vh\", overflow: \"auto\" }}\r\n            >\r\n              <Switch>\r\n                <ProtectedRoute\r\n                  path=\"/accounts/new\"\r\n                  authenticated={authenticated}\r\n                >\r\n                  <NewAccount />\r\n                </ProtectedRoute>\r\n                <ProtectedRoute\r\n                  path=\"/accounts/:assetPubKey\"\r\n                  authenticated={authenticated}\r\n                >\r\n                  <AccountDashboard />\r\n                </ProtectedRoute>\r\n                <ProtectedRoute path=\"/create\" authenticated={authenticated}>\r\n                  <Create />\r\n                </ProtectedRoute>\r\n                <ProtectedRoute path=\"/manage\" authenticated={authenticated}>\r\n                  <Manage />\r\n                </ProtectedRoute>\r\n                <ProtectedRoute\r\n                  path=\"/assets/manage/:assetPubKey\"\r\n                  authenticated={authenticated}\r\n                >\r\n                  <AssetManager />\r\n                </ProtectedRoute>\r\n\r\n                <Route path=\"/wallets/:id\">\r\n                  <UnlockWallet\r\n                    setAuthenticated={(id, password) => {\r\n                      setWalletId(id);\r\n                      setPassword(password);\r\n                      setAuthenticated(true);\r\n                    }}\r\n                  />\r\n                </Route>\r\n                <Route path=\"/unlock\">\r\n                  <Setup />\r\n                </Route>\r\n                <Route path=\"/\" >\r\n                  <Dashboard />\r\n                </Route>\r\n              </Switch>\r\n            </Box>\r\n          </Box>\r\n        </ThemeProvider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}