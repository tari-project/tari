syntax = "proto3";

package wallet_rpc;

// Wallet gRPC service
service WalletRpc {
    // Send a Tari Text Message
    rpc SendTextMessage(TextMessageToSend) returns (RpcResponse) {}
    // Request all messages
    // TODO implement pagination
    rpc GetTextMessages(VoidParams) returns (TextMessagesResponse) {}
    // Return messages that are from/to the Contact's pub_key
    rpc GetTextMessagesByContact(Contact) returns (TextMessagesResponse) {}
    // Get/Set for Screen Name
    rpc SetScreenName(ScreenName) returns (RpcResponse) {}
    rpc GetScreenName(VoidParams) returns (ScreenName) {}
    // CRUD for Contacts
    rpc AddContact(Contact) returns (RpcResponse) {}
    rpc RemoveContact(Contact) returns (RpcResponse) {}
    rpc GetContacts(VoidParams) returns (Contacts) {}
    //This method will update the screen_name of the contact with Pub-key contained in the argument Contact
    rpc UpdateContact(Contact) returns (RpcResponse) {}
}

// A generic RPC call response message to convey the result of the call
message RpcResponse {
    bool success = 1;
    string message = 2;
}

// A Tari Text Message to be sent
message TextMessageToSend {
    string dest_pub_key = 1;
    string message = 2;
}

// A Received Tari Text Message
message ReceivedTextMessage {
    bytes id = 1;
    string source_pub_key = 2;
    string dest_pub_key = 3;
    string message = 4;
    string timestamp = 5;
}

// A Sent Tari Text Message
message SentTextMessage {
    bytes id = 1;
    string source_pub_key = 2;
    string dest_pub_key = 3;
    string message = 4;
    string timestamp = 5;
    bool acknowledged = 6;
}

// An Empty message for RPC calls with no parameters
message VoidParams{}

// A collection of all messages
message TextMessagesResponse {
    repeated ReceivedTextMessage received_messages = 1;
    repeated SentTextMessage sent_messages = 2;
}

// Current users screen name
message ScreenName {
    string screen_name = 1;
}

// A contact
message Contact {
    string screen_name = 1;
    string pub_key = 2;
    string address = 3; //IP address with port i.e. "127.0.0.1:11123"
}

// A list of contacts
message Contacts {
    repeated Contact contacts = 1;
}