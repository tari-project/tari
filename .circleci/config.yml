version: 2.1

defaults:
  rust_image: &rust_image quay.io/tarilabs/rust_tari-build-with-deps:nightly-2021-09-18

commands:
  cucumber-js:
    description: Run cucumber scenarios
    steps:
      - run:
          name: node -v
          command: node -v
      - run:
          name: npm ci
          command: cd integration_tests && npm ci
      - run:
          name: Check formatting
          command: cd integration_tests && npm run check-fmt
      - run:
          name: Check eslint
          command: cd integration_tests && npm run lint
      - run:
          name: Build base node
          command: cargo build --release --bin tari_base_node
      - run:
          name: Build wallet
          command: cargo build --release --bin tari_console_wallet
      - run:
          name: Build mmproxy
          command: cargo build --release --bin tari_merge_mining_proxy
      - run:
          name: Build mining_node
          command: cargo build --release --bin tari_mining_node
      - run:
          name: Build stratum_transcoder
          command: cargo build --release --bin tari_stratum_transcoder
      - run:
          name: Run cucumber scenarios
          no_output_timeout: 20m
          command: cd integration_tests && mkdir -p cucumber_output && node_modules/.bin/cucumber-js --profile "ci" --tags "@critical and not @long-running and not @broken and not @wallet-ffi" --format json:cucumber_output/tests.cucumber --exit --retry 3 --retry-tag-filter "@flaky and not @broken"
      - run:
          name: Generate report
          command: cd integration_tests && node ./generate_report.js
          when: always
      - store_test_results:
          path: integration_tests/cucumber_output
      - store_artifacts:
          path: integration_tests/cucumber_output
      - store_artifacts:
          path: integration_tests/temp/reports
  cucumber-js-ffi:
    description: Run cucumber scenarios (FFI)
    steps:
      - run:
          name: node -v
          command: node -v
      - run:
          name: npm ci
          command: cd integration_tests && npm ci
      - run:
          name: Check eslint
          command: cd integration_tests && npm run lint
      - run:
          name: Build base node
          command: cargo build --release --bin tari_base_node
      - run:
          name: Build wallet
          command: cargo build --release --bin tari_console_wallet
      - run:
          name: Build wallet FFI
          command: cargo build --release --package tari_wallet_ffi
      - run:
          name: Build mmproxy
          command: cargo build --release --bin tari_merge_mining_proxy
      - run:
          name: Build mining_node
          command: cargo build --release --bin tari_mining_node
      - run:
          name: Build stratum_transcoder
          command: cargo build --release --bin tari_stratum_transcoder
      # Below step requires NodeJS v12 to run correctly, see explanation in WalletFFI.feature
      - run:
          name: Run FFI wallet library cucumber scenarios
          command: cd integration_tests && mkdir -p cucumber_output && node_modules/.bin/cucumber-js --profile "ci"  --tags "not @long-running and not @broken and @wallet-ffi" --format json:cucumber_output/tests_ffi.cucumber --exit --retry 3 --retry-tag-filter "@flaky and not @broken"
          when: always
      - run:
          name: Generate report (ffi)
          command: cd integration_tests && node ./generate_report.js "cucumber_output/tests_ffi.cucumber" "temp/reports/cucumber_ffi_report.html"
          when: always
      #      - run:
      #          name: Run flaky/broken cucumber scenarios (Always pass)
      #          command: cd integration_tests && node_modules/.bin/cucumber-js --tags "not @long-running and (@broken or @flaky)" --format json:cucumber_output/broken-tests.cucumber || true
      - store_test_results:
          path: integration_tests/cucumber_output
      - store_artifacts:
          path: integration_tests/cucumber_output
      - store_artifacts:
          path: integration_tests/temp/reports

jobs:
  run-integration-tests:
    docker:
      - image: *rust_image
    resource_class: medium
    environment:
      CARGO_HTTP_MULTIPLEXING: false
    steps:
      - checkout
      - cucumber-js

  run-ffi-integration-tests:
    docker:
      - image: *rust_image
    resource_class: medium
    environment:
      CARGO_HTTP_MULTIPLEXING: false
    steps:
      - checkout
      - cucumber-js-ffi


workflows:
  version: 2
  workflow:
    jobs:
      - run-integration-tests:
          filters:
            branches:
              ignore: gh-pages
      - run-ffi-integration-tests:
          filters:
            branches:
              ignore: gh-pages