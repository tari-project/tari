on:
  push:
    branches:
      - development
      - main
      - ci-*
      - staging
      - trying
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

name: CI

env:
  toolchain: nightly-2021-11-20
  CARGO_HTTP_MULTIPLEXING: false
  CARGO_TERM_COLOR: always
  PROTOC: protoc

jobs:

  checks:
    name: npm checks
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: npm audit launchpad gui
        run: |
          cd applications/launchpad/gui-vue
          npm audit
      - name: npm audit collectibles
        run: |
          cd applications/tari_collectibles/web-app
          # We have to ignore this for now because audit error is in react-scripts
          npm audit || true
      - name: npm audit explorer
        run: |
          cd applications/tari_explorer
          npm audit
      - name: npm audit web extensions
        run: |
          cd applications/tari_web_extension
          # We have to ignore this for now because audit error is in react-scripts
          npm audit || true
      - name: npm audit web extensions example
        run: |
          cd applications/tari_web_extension_example
          npm audit

  clippy:
    name: clippy
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.toolchain }}
          components: clippy, rustfmt
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: ubuntu dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get -y install \
          build-essential \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          libsoup2.4-dev \
          curl \
          wget \
          libappindicator3-dev \
          patchelf \
          librsvg2-dev \
          libprotobuf-dev \
          protobuf-compiler
      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings
  build:
    name: check nightly
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.toolchain }}
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: ubuntu dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get -y install \
          build-essential \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          libsoup2.4-dev \
          curl \
          wget \
          libappindicator3-dev \
          patchelf \
          librsvg2-dev \
          libprotobuf-dev \
          protobuf-compiler
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release --all-targets
      - name: cargo check ffi separately
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release --package tari_wallet_ffi

  build-stable:
    name: check stable
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: ubuntu dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get -y install \
          build-essential \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          libsoup2.4-dev \
          curl \
          wget \
          libappindicator3-dev \
          patchelf \
          librsvg2-dev \
          libprotobuf-dev \
          protobuf-compiler
      - name: rustup show
        run: |
          rustup show
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release --all-targets --locked
      - name: cargo check ffi separately
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release --package tari_wallet_ffi
  javascript:
    name: npm packages
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build launchpad gui-vue
        run: |
          cd applications/launchpad/gui-vue
          npm ci
          npm run build
      - name: build collectibles web-app
        run: |
          cd applications/tari_collectibles/web-app
          npm ci
          npm run build
      - name: lint/fmt tari explorer
        run: |
          cd applications/tari_explorer
          npm ci
          npm run lint
          npm run check-fmt
  licenses:
    name: file licenses
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install ripgrep
        run: |
          wget https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb
          sudo dpkg -i ripgrep_13.0.0_amd64.deb
          rg --version || exit 1
      - name: run the license check
        run: ./scripts/file_license_check.sh
  test:
    name: test
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.toolchain }}
      - uses: Swatinem/rust-cache@v1
      - name: ubuntu dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get -y install \
          build-essential \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          libsoup2.4-dev \
          curl \
          wget \
          libappindicator3-dev \
          patchelf \
          librsvg2-dev \
          libprotobuf-dev \
          protobuf-compiler
      - name: test key manager wasm
        run: |
          npm install -g wasm-pack
          cd base_layer/key_manager
          rustup target add wasm32-unknown-unknown
          make test
      - name: cargo test compile
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run --locked --all-features
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -v --all-features
  # Allows other workflows to know the PR number
  artifacts:
    name: test
    runs-on: ubuntu-18.04
    steps:
      - name: Save the PR number in an artifact
        shell: bash
        env:
          PR_NUM: ${{ github.event.number }}
        run: echo $PR_NUM > pr_num.txt

      - name: Upload the PR number
        uses: actions/upload-artifact@v2
        with:
          name: pr_num
          path: ./pr_num.txt
