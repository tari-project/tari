on:
  push:
    branches:
      - development
      - main
      - ci-*
      - staging
      - trying
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

name: CI

env:
  toolchain: nightly-2021-11-20
  CARGO_HTTP_MULTIPLEXING: false
  CARGO_TERM_COLOR: always
  PROTOC: protoc

jobs:
  clippy:
    name: clippy
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.toolchain }}
          components: clippy, rustfmt
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: ubuntu dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get -y install \
          build-essential \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          libsoup2.4-dev \
          curl \
          wget \
          libappindicator3-dev \
          patchelf \
          librsvg2-dev \
          libprotobuf-dev \
          protobuf-compiler
      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings
  build:
    name: check nightly
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.toolchain }}
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: ubuntu dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get -y install \
          build-essential \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          libsoup2.4-dev \
          curl \
          wget \
          libappindicator3-dev \
          patchelf \
          librsvg2-dev \
          libprotobuf-dev \
          protobuf-compiler
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release --all-targets
  build-stable:
    name: check stable
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: ubuntu dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get -y install \
          build-essential \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          libsoup2.4-dev \
          curl \
          wget \
          libappindicator3-dev \
          patchelf \
          librsvg2-dev \
          libprotobuf-dev \
          protobuf-compiler
      - name: rustup show
        run: |
          rustup show
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release --all-targets
  test:
    name: test
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.toolchain }}
      - uses: Swatinem/rust-cache@v1
      - name: ubuntu dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get -y install \
          build-essential \
          libgtk-3-dev \
          libwebkit2gtk-4.0-dev \
          libsoup2.4-dev \
          curl \
          wget \
          libappindicator3-dev \
          patchelf \
          librsvg2-dev \
          libprotobuf-dev \
          protobuf-compiler
      - name: test key manager wasm
        run: |
          npm install -g wasm-pack
          cd base_layer/key_manager
          rustup target add wasm32-unknown-unknown
          make test
      - name: cargo test compile
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run --locked --all-features
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -v --all-features
