---
name: Source Coverage

on:
  workflow_dispatch:
  push:
    branches:
      - development
      - ci-coverage-*

env:
  toolchain: nightly-2022-05-01

jobs:
  coverage:
    name: test and generate cov
    runs-on: [ self-hosted, ubuntu18.04-high-mem ]
    steps:
      - name: ubuntu dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get -y install \
            openssl \
            libssl-dev \
            pkg-config \
            libsqlite3-dev \
            clang-10 \
            git \
            cmake \
            libc++-dev \
            libc++abi-dev \
            libprotobuf-dev \
            protobuf-compiler \
            libncurses5-dev \
            libncursesw5-dev \
            zip \
            build-essential \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libsoup2.4-dev \
            curl \
            wget \
            libappindicator3-dev \
            patchelf \
            librsvg2-dev
      - name: checkout
        uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: llvm-tools-preview
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          RUSTFLAGS: "-C instrument-coverage"
          RUSTDOCFLAGS: "-C instrument-coverage"
          LLVM_PROFILE_FILE: "coverage_data-%p-%m.profraw"
      - id: coverage
        name: Prepare coverage data
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: |
          cargo install grcov
          grcov . -s . --binary-path ./target/debug -t coveralls --branch --ignore-not-existing \
             -o ./target/coveralls_coverage.json \
             --token $COVERALLS_REPO_TOKEN \
             --ignore target/**/*.rs \
             --ignore **/.cargo/**/*.rs \
             --vcs-branch $GITHUB_REF_NAME \
             --service-name github \
             --service-job-id ${GITHUB_RUN_ID}
      - id: archive-coverage
        name: archive-coverage
        uses: actions/upload-artifact@v3
        with:
          path: target/coveralls_coverage.json
          name: coveralls-coverage
      - name: Coveralls upload
        uses: toshke/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./target/coveralls_coverage.json
          file-format: coveralls
