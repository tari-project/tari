---
name: Build libwallet - workflow_call/on-demand

'on':
  workflow_call:
    inputs:
      build_android:
        type: string
        default: 'true'
      build_ios:
        type: string
        default: 'true'
      toolchain:
        type: string
        description: 'Rust toolchain'
        default: 'stable'

jobs:
  android_build:
    name: Build Android
    if: ${{ inputs.build_android == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        build: [
          x86_64-linux-android,
          aarch64-linux-android,
        ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy
          toolchain: ${{ inputs.toolchain }}
          target: ${{ matrix.build }}
          override: true

      - name: Cache cargo files and outputs
        uses: Swatinem/rust-cache@v2

      - name: Build libwallet libraries
        uses: actions-rs/cargo@v1
        env:
          CFLAGS: "-DMDB_USE_ROBUST=0"
        with:
          use-cross: true
          command: build
          args: >
            --lib
            --release
            --package tari_wallet_ffi
            --target=${{ matrix.build }}

      - name: Prepare libwallet libraries
        shell: bash
        run: |
          target_temp=${{ matrix.build }}
          # Strip '-linux-android'
          target_platform=$(echo "${target_temp/-linux-android*/}")
          echo "target_platform=${target_platform}" >> $GITHUB_ENV
          mkdir -p "${{ runner.temp }}/libwallet-android-${target_platform}"
          cd "${{ runner.temp }}/libwallet-android-${target_platform}"
          cp -v "$GITHUB_WORKSPACE/target/${{ matrix.build }}/release/libtari_wallet_ffi.a" "libtari_wallet_ffi.android_${target_platform}.a"
          cp -v "$GITHUB_WORKSPACE/base_layer/wallet_ffi/wallet.h" libtari_wallet_ffi.h
          cp -v "$GITHUB_WORKSPACE/changelog.md" .
          cd ..
          shasum -a 256 \
            "libwallet-android-${target_platform}/libtari_wallet_ffi.android_${target_platform}.a" \
            "libwallet-android-${target_platform}/libtari_wallet_ffi.h" \
              > "libwallet-android-${target_platform}/libtari_wallet_ffi.android_${target_platform}.sha256sums"
          ls -alht "${{ runner.temp }}/libwallet-android-${target_platform}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libwallet-android-${{ env.target_platform }}
          path: ${{ runner.temp }}/libwallet-android-${{ env.target_platform }}

  ios_build:
    name: Build iOS
    if: ${{ inputs.build_ios == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        build: [
          x86_64-apple-ios,
          aarch64-apple-ios,
          aarch64-apple-ios-sim,
        ]

    runs-on: macos-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy
          toolchain: ${{ inputs.toolchain }}
          target: ${{ matrix.build }}
          override: true

      - name: Install macOS dependencies
        run: brew install cmake coreutils

      - name: Cache cargo files and outputs
        uses: Swatinem/rust-cache@v2

      - name: Build libwallet libraries
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: >
            --lib
            --release
            --package tari_wallet_ffi
            --target=${{ matrix.build }}

      - name: Prepare libwallet libraries
        shell: bash
        run: |
          target_temp=${{ matrix.build }}
          # Strip '-apple-ios'
          target_platform=$(echo "${target_temp/-apple-ios/}")
          echo "target_platform=${target_platform}" >> $GITHUB_ENV
          mkdir -p "${{ runner.temp }}/libwallet-ios-${target_platform}"
          cd "${{ runner.temp }}/libwallet-ios-${target_platform}"
          cp -v "$GITHUB_WORKSPACE/target/${{ matrix.build }}/release/libtari_wallet_ffi.a" "libtari_wallet_ffi.ios_${target_platform}.a"
          cp -v "$GITHUB_WORKSPACE/base_layer/wallet_ffi/wallet.h" libtari_wallet_ffi.h
          cp -v "$GITHUB_WORKSPACE/changelog.md" .
          cd ..
          shasum -a 256 \
            "libwallet-ios-${target_platform}/libtari_wallet_ffi.ios_${target_platform}.a" \
            "libwallet-ios-${target_platform}/libtari_wallet_ffi.h" \
              > "libwallet-ios-${target_platform}/libtari_wallet_ffi.ios_${target_platform}.sha256sums"
          ls -alht "${{ runner.temp }}/libwallet-ios-${target_platform}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libwallet-ios-${{ env.target_platform }}
          path: ${{ runner.temp }}/libwallet-ios-${{ env.target_platform }}

  ios_assemble_universal:
    name: Assemble iOS universal
    if: ${{ inputs.build_ios == 'true' }}
    needs: ios_build
    strategy:
      fail-fast: false

    runs-on: macos-latest

    steps:
      - name: Install macOS dependencies
        run: brew install coreutils

      - name: Download iOS libwallets
        uses: actions/download-artifact@v3
        with:
          path: libwallets

      - name: Verify checksums
        shell: bash
        working-directory: libwallets
        run: |
          ls -alhtR
          find . -name "*.sha256sums" -type f -print | xargs cat >> libwallets.txt.sha256sums-verify
          cat libwallets.txt.sha256sums-verify
          sha256sum -c libwallets.txt.sha256sums-verify

      - name: Assemble iOS universal libwallet
        shell: bash
        working-directory: libwallets
        run: |
          ls -alht
          mkdir libwallet-ios-universal
          cp -v "libwallet-ios-x86_64/libtari_wallet_ffi.h" \
            libwallet-ios-universal/
          cp -v "libwallet-ios-x86_64/changelog.md" \
            libwallet-ios-universal/
          lipo -create \
            "libwallet-ios-x86_64/libtari_wallet_ffi.ios_x86_64.a" \
            "libwallet-ios-aarch64/libtari_wallet_ffi.ios_aarch64.a" \
              -output "libwallet-ios-universal/libtari_wallet_ffi.ios_universal.a"
          shasum -a 256 \
            "libwallet-ios-universal/libtari_wallet_ffi.ios_universal.a" \
            "libwallet-ios-universal/libtari_wallet_ffi.h" \
              > "libwallet-ios-universal/libtari_wallet_ffi.ios_universal.sha256sums"
          ls -alht

      - name: Upload iOS universal libwallet artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libwallet-ios-universal
          path: libwallets/libwallet-ios-universal

      - name: Assemble iOS libwallet xcframework
        shell: bash
        working-directory: libwallets
        run: |
          ls -alht
          mkdir libwallet-ios-universal-sim
          lipo -create \
            "libwallet-ios-x86_64/libtari_wallet_ffi.ios_x86_64.a" \
            "libwallet-ios-aarch64-sim/libtari_wallet_ffi.ios_aarch64-sim.a" \
              -output "libwallet-ios-universal-sim/libtari_wallet_ffi.ios_universal-sim.a"
          mkdir libwallet-ios-xcframework
          cp -v "libwallet-ios-x86_64/changelog.md" \
            libwallet-ios-xcframework/
          xcodebuild -create-xcframework \
            -library "libwallet-ios-universal-sim/libtari_wallet_ffi.ios_universal-sim.a" \
              -headers "libwallet-ios-x86_64/libtari_wallet_ffi.h" \
            -library "libwallet-ios-aarch64/libtari_wallet_ffi.ios_aarch64.a" \
              -headers "libwallet-ios-aarch64/libtari_wallet_ffi.h" \
            -output libwallet-ios-xcframework/libtari_wallet_ffi_ios.xcframework
          shasum -a 256 \
            "libwallet-ios-xcframework/libtari_wallet_ffi_ios.xcframework/Info.plist" \
            "libwallet-ios-xcframework/libtari_wallet_ffi_ios.xcframework/ios-arm64/Headers" \
            "libwallet-ios-xcframework/libtari_wallet_ffi_ios.xcframework/ios-arm64/libtari_wallet_ffi.ios_aarch64.a" \
            "libwallet-ios-xcframework/libtari_wallet_ffi_ios.xcframework/ios-arm64_x86_64-simulator/Headers" \
            "libwallet-ios-xcframework/libtari_wallet_ffi_ios.xcframework/ios-arm64_x86_64-simulator/libtari_wallet_ffi.ios_universal-sim.a" \
              > "libwallet-ios-xcframework/libtari_wallet_ffi.ios_xcframework.sha256sums"
          ls -alht

      - name: Upload iOS xcframework libwallet artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libwallet-ios-xcframework
          path: libwallets/libwallet-ios-xcframework
